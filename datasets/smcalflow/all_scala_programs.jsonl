{"qid": "0bec0139-79a2-40d1-a37c-c433d7ade008.6", "query": "I need to get a meeting scheduled for tomorrow afternoon with Scot Hanson", "scala": "def answer() = {\n    val scot = api.findPerson(\"Scot Hanson\")\n    api.addEvent(Event(subject = \"Meeting with Scot Hanson\", attendees = List(scot), startsAt = List(DateTimeValues.Tomorrow, DateTimeValues.Afternoon)))\n}"}
{"qid": "4ab72b58-7bbe-4743-8b73-42ecc87363e3.0", "query": "Add a meeting with Sarah for tomorrow at 1 pm .", "scala": "def answer() = {\n    val sarah = api.findPerson(\"Sarah\")\n    api.addEvent(Event(subject = \"Meeting with Sarah\", attendees = List(sarah), startsAt = List(DateTimeValues.Tomorrow, DateTimeClause.timeByHm(hour = 1, amOrPm = \"pm\"))))\n}"}
{"qid": "41ea55f9-348a-4449-bc3e-590a62a287b2.3", "query": "Also schedule Basketball Game tomorrow at 6 : 30 pm .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Basketball Game\", startsAt = List(DateTimeValues.Tomorrow, DateTimeClause.timeByHm(hour = 6, minute = 30, amOrPm = \"pm\"))))\n}"}
{"qid": "6a9ee489-d297-49b1-b8a5-cf59b00bacba.2", "query": "Can you add Go to Barnes and Noble at the end of the day on Friday ?", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Go to Barnes and Noble\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Friday\"), DateTimeValues.EndOfWorkDay)))\n}"}
{"qid": "ca15b261-5f71-4532-b8dc-441fa68e7993.0", "query": "Can you add a lunch meeting to my schedule for an hour and half on Thursday at noon , and please invite Alyssa to that .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Lunch Meeting\", attendees = List(api.findPerson(\"Alyssa\")), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Thursday\"), DateTimeValues.Noon), duration = TimeUnit(number = 1.5, unit = TimeUnits.Hours)))\n}"}
{"qid": "d5dd6726-b313-449e-84fe-bdbdc3b0b8d6.0", "query": "Can you add dinner at The Melting Pot on Saturday at 8 PM ?", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Dinner at The Melting Pot\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Saturday\"), DateTimeClause.timeByHm(hour = 8, amOrPm = \"pm\")), location = \"The Melting Pot\"))\n}"}
{"qid": "4580d96c-fa36-4002-bc08-718b23c098c5.0", "query": "Add shopping starting at 9 am saturday at the mall of america for 6 hours", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Shopping\", startsAt = List(DateTimeClause.timeByHm(hour = 9, amOrPm = \"am\"), DateTimeClause.getNextDow(dayOfWeek = \"Saturday\")), duration = TimeUnit(number = 6, unit = TimeUnits.Hours), location = \"Mall of America\"))\n}"}
{"qid": "20d389e6-163b-4afa-a421-f5b9f404d145.12", "query": "Make a party for Cher Roydon at 5 pm", "scala": "def answer() = {\n    val cher = api.findPerson(\"Cher Roydon\")\n    api.addEvent(Event(subject = \"Party for Cher Roydon\", attendees = List(cher), startsAt = List(DateTimeClause.timeByHm(hour = 5, amOrPm = \"pm\"))))\n}"}
{"qid": "1b989119-89d7-472e-9ae1-01112f8e6961.2", "query": "Create a meeting in the afternoon on Monday", "scala": "def answer() = {\n    api.addEvent(Event(startsAt = List(DateTimeValues.Afternoon, DateTimeClause.getNextDow(dayOfWeek = \"Monday\"))))\n}"}
{"qid": "e5b526eb-16dc-4578-96a4-c51d20b59d7c.0", "query": "Add a meeting with John to discuss the new partner on Tuesday at 4 : 00 pm .", "scala": "def answer() = {\n    val john = api.findPerson(\"John\")\n    api.addEvent(Event(subject = \"Meeting to discuss new partner\", attendees = List(john), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Tuesday\"), DateTimeClause.timeByHm(hour = 4, amOrPm = \"pm\"))))\n}"}
{"qid": "e144f61d-b1f2-4546-a8a7-3886681d5bcf.1", "query": "Schedule a dentist appointment today for 3 : 00 pm .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Dentist Appointment\", startsAt = List(DateTimeValues.Today, DateTimeClause.timeByHm(hour = 3, amOrPm = \"pm\"))))\n}"}
{"qid": "bba573d0-b142-4376-8476-0b1b247859e7.0", "query": "Please add an appointment at 4 o'clock", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Appointment\", startsAt = List(DateTimeClause.timeByHm(hour = 4, amOrPm = \"pm\"))))\n}"}
{"qid": "6af2f273-28f7-4134-9d8b-5a2c0e23091e.0", "query": "Set up a trip to the zoo for 4 hours", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Trip to the Zoo\", duration = TimeUnit(number = 4, unit = TimeUnits.Hours)))\n}"}
{"qid": "b1d45d71-b200-4d54-b257-aa38e4e6667b.1", "query": "Can you make a new event for Friday at 10 am", "scala": "def answer() = {\n    api.addEvent(Event(startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Friday\"), DateTimeClause.timeByHm(hour = 10, amOrPm = \"am\"))))\n}"}
{"qid": "0461960a-16ee-41e3-bc45-0cb2184825df.0", "query": "Make an event for me on Monday for swimming", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Swimming\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Monday\"))))\n}"}
{"qid": "3578c45b-5064-42a8-859d-e78656e81132.2", "query": "Finally I have a family dinner this saturday at 6 pm for 2 hours , at home .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Family Dinner\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Saturday\"), DateTimeClause.timeByHm(hour = 6, amOrPm = \"pm\")), duration = TimeUnit(number = 2, unit = TimeUnits.Hours), location = \"Home\"))\n}"}
{"qid": "cc936d51-f879-4ed3-9c4d-bfbb1bf8ae78.0", "query": "Add lunch with Lauren for 12 : 00 tomorrow", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Lunch with Lauren\", attendees = List(api.findPerson(\"Lauren\")), startsAt = List(DateTimeValues.Tomorrow, DateTimeClause.timeByHm(hour = 12, amOrPm = \"pm\"))))\n}"}
{"qid": "cdbb1897-b2f2-452d-8df0-1fb5f20d9230.0", "query": "I need to add a one on one with Shelby to my calendar on Thursday at 2 pm for 10 minutes", "scala": "def answer() = {\n    val shelby = api.findPerson(\"Shelby\")\n    api.addEvent(Event(subject = \"One-on-One with Shelby\", attendees = List(shelby), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Thursday\"), DateTimeClause.timeByHm(hour = 2, amOrPm = \"pm\")), duration = TimeUnit(number = 10, unit = TimeUnits.Minutes)))\n}"}
{"qid": "9db154b8-49b6-47c8-b2e8-d2df819e0c11.2", "query": "Please also add my dinner with Maria last night .", "scala": "def answer() = {\n    val maria = api.findPerson(\"Maria\")\n    api.addEvent(Event(subject = \"Dinner with Maria\", attendees = List(maria), startsAt = List(DateTimeValues.LastWeekNew, DateTimeValues.Night)))\n}"}
{"qid": "db1f5c8c-6de3-480a-acbe-ba707a5f4a2e.0", "query": "will you schedule me a hike this sunday at 11 AM", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Hike\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Sunday\"), DateTimeClause.timeByHm(hour = 11, amOrPm = \"am\"))))\n}"}
{"qid": "0c49f297-9c00-46a5-a90e-9485445cc10e.3", "query": "What is the name of Dan Marton 's skip ? I do not see him on the list of attendees .", "scala": "def answer(): \n    api.findPerson(\"Dan Marton\").findManagerOf().findManagerOf()"}
{"qid": "ea17b036-82d9-4100-8c51-bf6535e60be1.0", "query": "Schedule meeting with Tom for 8 am Friday for one hour .", "scala": "def answer() = {\n    val tom = api.findPerson(\"Tom\")\n    api.addEvent(Event(subject = \"Meeting with Tom\", attendees = List(tom), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Friday\"), DateTimeClause.timeByHm(hour = 8, amOrPm = \"am\")), duration = TimeUnit(number = 1, unit = TimeUnits.Hours)))\n}"}
{"qid": "ba63732e-900b-42cd-b4d4-5ad8890da791.0", "query": "I need to add a lunch meeting with Susan , Sue , Karen , and Kate Thursday at 11 .", "scala": "def answer() = {\n    val susan = api.findPerson(\"Susan\")\n    val sue = api.findPerson(\"Sue\")\n    val karen = api.findPerson(\"Karen\")\n    val kate = api.findPerson(\"Kate\")\n    api.addEvent(Event(subject = \"Lunch Meeting\", attendees = List(susan, sue, karen, kate), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Thursday\"), DateTimeClause.timeByHm(hour = 11, amOrPm = \"am\"))))\n}"}
{"qid": "c324fdbe-0f99-4153-9fcd-72b852375f08.0", "query": "Add Met with Conan to yesterday at 1 PM .", "scala": "def answer() = {\n    val conan = api.findPerson(\"Conan\")\n    api.addEvent(Event(subject = \"Met with Conan\", attendees = List(conan), startsAt = List(DateTimeValues.Yesterday, DateTimeClause.timeByHm(hour = 1, amOrPm = \"pm\"))))\n}"}
{"qid": "24cf0086-f7ec-4a6e-83fa-1b60a9e88f25.0", "query": "Can you set up a meeting tomorrow with Liz , kim and Ray ?", "scala": "def answer() = {\n   val attendees = List(api.findPerson(\"Liz\"), api.findPerson(\"Kim\"), api.findPerson(\"Ray\"))\n    api.addEvent(Event(attendees=attendees, startsAt=List(DateTimeValues.Tomorrow)))\n}"}
{"qid": "4843715c-18cc-491e-8372-08e9dd1ba4d4.0", "query": "Create a meeting with Alex on Sunday", "scala": "def answer() = {\n    api.addEvent(Event(attendees = List(api.findPerson(\"Alex\")), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Sunday\"))))\n}"}
{"qid": "4dae2686-cb1c-4e6c-ab61-f29c76874bd7.3", "query": "Please add lunch from 12 to 2 on Friday the 25 th .", "scala": "def answer() = {\n    val date = DateTimeClause.nextDayOfMonth(DateTimeValues.Today, dayOfMonth = 25)\n    api.addEvent(Event(subject = \"lunch\", startsAt = List(date, DateTimeClause.timeByHm(hour = 12, amOrPm = \"pm\")), endsAt = List(date, DateTimeClause.timeByHm(hour = 2, amOrPm = \"pm\"))))\n}"}
{"qid": "f73c7f2d-b9f0-421f-9b4f-37b2b27b6f31.0", "query": "Hi , can you please add a working lunch with Luke on Tuesday from 12 : 30 til 1 : 45 pm ?", "scala": "def answer() = {\n    val luke = api.findPerson(\"Luke\")\n    api.addEvent(Event(subject = \"Working Lunch with Luke\", attendees = List(luke), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Tuesday\"), DateTimeClause.timeByHm(hour = 12, minute = 30, amOrPm = \"pm\")), endsAt = List(DateTimeClause.timeByHm(hour = 1, minute = 45, amOrPm = \"pm\"))))\n}"}
{"qid": "9c9bb838-6dd9-4e99-9ae9-a19e5873bc71.1", "query": "can you add play golf on tuesday ?", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Play Golf\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Tuesday\"))))\n}"}
{"qid": "69a97fbd-fc8c-4002-ba4a-176ee4eaad7f.0", "query": "I will be destroying a nation for 3 hours", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Destroying a Nation\", duration = TimeUnit(number = 3, unit = TimeUnits.Hours)))\n}"}
{"qid": "1daea84a-f8d4-4174-9045-ea4b8d60e872.1", "query": "Can you Schedule a Buyers Meeting this Friday", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Buyers Meeting\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Friday\"))))\n}"}
{"qid": "f4352b5f-f615-4fba-a586-19d0a2909fcb.2", "query": "Make an event to to walking on Monday", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Walking\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Monday\"))))\n}"}
{"qid": "44c1a444-d21a-45fe-bd2e-035178c63892.2", "query": "I 'll be gone starting friday for 3 days to GET LIT", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"GET LIT\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Friday\")), duration = TimeUnit(number = 3, unit = TimeUnits.Days)))\n}"}
{"qid": "b8c1c39e-0375-4585-8dfe-a0b3d011ca65.3", "query": "Can you add a meeting with Beth at 5 pm on Tuesday ?", "scala": "def answer() = {\n    val beth = api.findPerson(\"Beth\")\n    api.addEvent(Event(subject = \"Meeting with Beth\", attendees = List(beth), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Tuesday\"), DateTimeClause.timeByHm(hour = 5, amOrPm = \"pm\"))))\n}"}
{"qid": "8e4c181f-cabd-4c8e-9b1b-f127b46273d4.0", "query": "Please add a lunch meeting on Friday at 1 at Laughing Seed Cafe in Asheville", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Lunch Meeting\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Friday\"), DateTimeClause.timeByHm(hour = 1, amOrPm = \"pm\")), location = \"Laughing Seed Cafe in Asheville\"))\n}"}
{"qid": "aaf3fd99-e3b1-49ac-a2e7-3acf311160a9.0", "query": "William 's birthday March 18 th", "scala": "def answer() = {\n    val william = api.findPerson(\"William\")\n    api.addEvent(Event(subject = \"William's Birthday\", startsAt = List(DateTimeClause.dateByMdy(month = \"MARCH\", day = 18))))\n}"}
{"qid": "58395ec0-c17d-49a2-9a66-cfdb0f2c93b2.4", "query": "Schedule Run Marathon on August 7 th at 8 am .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Run Marathon\", startsAt = List(DateTimeClause.dateByMdy(month = \"AUGUST\", day = 7), DateTimeClause.timeByHm(hour = 8, amOrPm = \"am\"))))\n}"}
{"qid": "323dd7da-c090-443c-8d96-3eb9e8c8fa62.0", "query": "create meeting with damon sykes tomorrow at 5", "scala": "def answer() = {\n    val damon = api.findPerson(\"Damon Sykes\")\n    api.addEvent(Event(subject = \"Meeting with Damon Sykes\", attendees = List(damon), startsAt = List(DateTimeValues.Tomorrow, DateTimeClause.timeByHm(hour = 5, amOrPm = \"pm\"))))\n}"}
{"qid": "1a31d7ce-8646-4664-9e35-8e8b054f865e.0", "query": "please set the meeting on paul", "scala": "def answer() = {\n    val paul = api.findPerson(\"Paul\")\n    api.addEvent(Event(subject = \"Meeting\", attendees = List(paul)))\n}"}
{"qid": "4fbfeb53-33e6-470e-8fe1-82cad69c7011.2", "query": "Thank you and can you make a new appointment for next Tuesday ?", "scala": "def answer() = {\n    api.addEvent(Event(startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Tuesday\"))))\n}"}
{"qid": "bd5d8071-c855-43b0-8247-4c775b10f979.1", "query": "Who are my reports ?", "scala": "def answer(): \n    api.getCurrentUser().findReportsOf()"}
{"qid": "2a494fe9-b745-4bf2-abbd-054b5c054736.0", "query": "I must heed the Anthem of the Gods today from 5 pm to 9 pm", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Anthem of the Gods\", startsAt = List(DateTimeValues.Today, DateTimeClause.timeByHm(hour = 5, amOrPm = \"pm\")), endsAt = List(DateTimeClause.timeByHm(hour = 9, amOrPm = \"pm\"))))\n}"}
{"qid": "bf01569f-b384-4155-875c-0c972d586104.0", "query": "Please add calender entry next tuesday with Cornelio", "scala": "def answer() = {\n    val cornelio = api.findPerson(\"Cornelio\")\n    api.addEvent(Event(attendees = List(cornelio), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Tuesday\"))))\n}"}
{"qid": "af835800-19eb-4498-8a4d-4139d5d3567b.0", "query": "Make me a dinner party on Tuesday at 7 pm", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Dinner Party\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Tuesday\"), DateTimeClause.timeByHm(hour = 7, amOrPm = \"pm\"))))\n}"}
{"qid": "86b3445e-080a-47ea-a470-05283bb00328.0", "query": "create basketball game on wednesday at 8", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Basketball Game\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Wednesday\"), DateTimeClause.timeByHm(hour = 8, amOrPm = \"pm\"))))\n}"}
{"qid": "7eac438e-30b2-429f-8963-eeb1b7cca320.0", "query": "Add doctor 's appointment for 8 : 30 AM on Thursday .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Doctor's Appointment\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Thursday\"), DateTimeClause.timeByHm(hour = 8, minute = 30, amOrPm = \"am\"))))\n}"}
{"qid": "2815d0af-ea71-4567-a667-8b117870a459.2", "query": "Can you make an event for Friday at 3 ?", "scala": "def answer() = {\n    api.addEvent(Event(startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Friday\"), DateTimeClause.timeByHm(hour = 3, amOrPm = \"pm\"))))\n}"}
{"qid": "100bb1b7-8a59-4294-9978-6b7cd90efbaf.0", "query": "show movie at 8 today", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Movie\", startsAt = List(DateTimeClause.timeByHm(hour = 8, amOrPm = \"pm\"), DateTimeValues.Today)))\n}"}
{"qid": "181c55d2-0311-4737-91a8-7abdbae6077a.3", "query": "Note that I had a meeting with Lee and Eric yesterday at 2 : 15 pm .", "scala": "def answer() = {\n    val lee = api.findPerson(\"Lee\")\n    val eric = api.findPerson(\"Eric\")\n    api.addEvent(Event(subject = \"Meeting with Lee and Eric\", attendees = List(lee, eric), startsAt = List(DateTimeValues.Yesterday, DateTimeClause.timeByHm(hour = 2, minute = 15, amOrPm = \"pm\"))))\n}"}
{"qid": "15226da6-eb1b-438b-9afa-057f73a0e8a2.0", "query": "create a meeting with james today", "scala": "def answer() = {\n    api.addEvent(Event(attendees = List(api.findPerson(\"James\")), startsAt = List(DateTimeValues.Today)))\n}"}
{"qid": "7391794a-89d9-45d8-bc4a-58adfe344fb4.1", "query": "please add \" huddle \" to Thursday at 8 am", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"huddle\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Thursday\"), DateTimeClause.timeByHm(hour = 8, amOrPm = \"am\"))))\n}"}
{"qid": "c9a65cd7-366e-417d-aaca-dd5f4573ab07.0", "query": "Schedule me a coffee event on May 7 th at 8 pm", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Coffee Event\", startsAt = List(DateTimeClause.dateByMdy(month = \"MAY\", day = 7), DateTimeClause.timeByHm(hour = 8, amOrPm = \"pm\"))))\n}"}
{"qid": "53b67481-80ef-4cbc-9157-b99b37d53048.0", "query": "Can you set up something for a phone meeting tomorrow at 2 pm ?", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Phone Meeting\", startsAt = List(DateTimeValues.Tomorrow, DateTimeClause.timeByHm(hour = 2, amOrPm = \"pm\"))))\n}"}
{"qid": "a4d8fa1e-cf83-4541-9b43-8df9ff2122dc.0", "query": "Create a get - together on Mt. Denali for Saturday morning at 9 .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Get-together on Mt. Denali\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Saturday\"), DateTimeValues.Morning, DateTimeClause.timeByHm(hour = 9, amOrPm = \"am\")), location = \"Mt. Denali\"))\n}"}
{"qid": "3745161d-c0d1-41a0-9baa-6bb77be2b876.3", "query": "I need to block out time for a book signing . The whole thing will take about 3 hours and I intend to get there at 3 pm on Sunday", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Book Signing\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Sunday\"), DateTimeClause.timeByHm(hour = 3, amOrPm = \"pm\")), duration = TimeUnit(number = 3, unit = TimeUnits.Hours)))\n}"}
{"qid": "1272ba6c-34f4-4b3c-862a-52f7c545240a.1", "query": "Create me a meeting with Scot Hanson on Saturday please", "scala": "def answer() = {\n    val scot = api.findPerson(\"Scot Hanson\")\n    api.addEvent(Event(subject = \"Meeting with Scot Hanson\", attendees = List(scot), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Saturday\"))))\n}"}
{"qid": "e8643786-c3ef-4144-b3f9-d13e0e3860fd.0", "query": "Create a new meeting for thursday at 8 pm", "scala": "def answer() = {\n    api.addEvent(Event(startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Thursday\"), DateTimeClause.timeByHm(hour = 8, amOrPm = \"pm\")), subject = \"new meeting\"))\n}"}
{"qid": "f64e44a6-642e-4e12-a531-bbb99a28cb00.4", "query": "make an event for monday at 2 pm for a doctors appointment", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Doctor's Appointment\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Monday\"), DateTimeClause.timeByHm(hour = 2, amOrPm = \"pm\"))))\n}"}
{"qid": "1d02027c-0dd4-4198-af4d-b35442f43032.2", "query": "i need to have an event on Monday to watch Peter_Bachelor", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Watch Peter_Bachelor\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Monday\"))))\n}"}
{"qid": "c70a7d76-c5a8-4092-80a7-e4771e67567a.3", "query": "Schedule the coffee date for 1 : 00 p.m. with Fred , Lucy and Kie", "scala": "def answer() = {\n    val fred = api.findPerson(\"Fred\")\n    val lucy = api.findPerson(\"Lucy\")\n    val kie = api.findPerson(\"Kie\")\n    api.addEvent(Event(subject = \"Coffee Date\", attendees = List(fred, lucy, kie), startsAt = List(DateTimeClause.timeByHm(hour = 1, amOrPm = \"pm\"))))\n}"}
{"qid": "ce6725bd-f275-4955-841a-05ee72fdd280.0", "query": "add baby time on friday", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Baby Time\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Friday\"))))\n}"}
{"qid": "edccf7da-ae2d-406d-8492-00d4238aeb6e.4", "query": "Add an appointment to clean out my office for saturday at 1 pm", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Clean out my office\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Saturday\"), DateTimeClause.timeByHm(hour = 1, amOrPm = \"pm\"))))\n}"}
{"qid": "2fb4bc0a-3a26-4b01-9ca5-499acbb98944.2", "query": "Schedule a seminar on March 19 at 8 : 15 am for an hour", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"seminar\", startsAt = List(DateTimeClause.dateByMdy(month = \"MARCH\", day = 19), DateTimeClause.timeByHm(hour = 8, minute = 15, amOrPm = \"am\")), duration = TimeUnit(number = 1, unit = TimeUnits.Hours)))\n}"}
{"qid": "d9b63549-41ac-4c03-abc0-63cbfb2bdb52.1", "query": "Set a meeting with Lisa at 12 : 00 pm 04 / 27 / 2019", "scala": "def answer() = {\n    val lisa = api.findPerson(\"Lisa\")\n    api.addEvent(Event(subject = \"Meeting with Lisa\", attendees = List(lisa), startsAt = List(DateTimeClause.dateByMdy(month = 4, day = 27, year = 2019), DateTimeClause.timeByHm(hour = 12, amOrPm = \"pm\"))))\n}"}
{"qid": "c1fd2c16-8535-46f9-bf3d-eed8fe606422.0", "query": "Add a workout session for Sunday at 8 am for 3 hours", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Workout Session\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Sunday\"), DateTimeClause.timeByHm(hour = 8, amOrPm = \"am\")), duration = TimeUnit(number = 3, unit = TimeUnits.Hours)))\n}"}
{"qid": "223edb7f-6804-4a54-b169-298b6ce50f6d.4", "query": "Create a meeting in the afternoon on Monday", "scala": "def answer() = {\n    api.addEvent(Event(startsAt = List(DateTimeValues.Afternoon, DateTimeClause.getNextDow(dayOfWeek = \"Monday\"))))\n}"}
{"qid": "b45da458-ec3b-4f53-b4ba-5a27dbc73b81.3", "query": "Doctors appointment Monday 2 pm", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Doctor's Appointment\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Monday\"), DateTimeClause.timeByHm(hour = 2, amOrPm = \"pm\"))))\n}"}
{"qid": "2a882c87-0eef-4950-a38c-1c2b1a193bd0.1", "query": "At 11 set an event stop to get something to eat .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Get something to eat\", startsAt = List(DateTimeClause.timeByHm(hour = 11, amOrPm = \"am\"))))\n}"}
{"qid": "7d72f1e4-ea31-41e4-b419-08baca8c019a.6", "query": "Add a meeting with Bob and Suzy Tuesday at 1 PM", "scala": "def answer() = {\n    val bob = api.findPerson(\"Bob\")\n    val suzy = api.findPerson(\"Suzy\")\n    api.addEvent(Event(subject = \"Meeting with Bob and Suzy\", attendees = List(bob, suzy), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Tuesday\"), DateTimeClause.timeByHm(hour = 1, amOrPm = \"pm\"))))\n}"}
{"qid": "4463694e-1677-4b6a-8f8e-786a00019e61.1", "query": "put meeting with robells", "scala": "def answer() = {\n    val robells = api.findPerson(\"Robells\")\n    api.addEvent(Event(subject = \"Meeting with Robells\", attendees = List(robells)))\n}"}
{"qid": "32f46000-ea50-40a6-95ff-d81290cf5e86.0", "query": "I 'm going to lift some weights at 10", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Lifting Weights\", startsAt = List(DateTimeClause.timeByHm(hour = 10, amOrPm = \"am\"))))\n}"}
{"qid": "f41519e2-a45f-4599-874a-9414f8e7480a.1", "query": "Set an appointment to check the weather in Florida at 3 .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Check Weather in Florida\", startsAt = List(DateTimeValues.Today, DateTimeClause.timeByHm(hour = 3, amOrPm = \"pm\"))))\n}"}
{"qid": "7ca735d9-c960-4567-bb9f-4b2ee7bc4733.2", "query": "Schedule Call mom and speak about previous arrangements at 1 pm today .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Call mom\", startsAt = List(DateTimeValues.Today, DateTimeClause.timeByHm(hour = 1, amOrPm = \"pm\"))))\n}"}
{"qid": "15b0f0e5-023c-4a2d-9f66-4f47c9b95e51.5", "query": "I need to add a doctor appointment for 4 / 16 at 8 am .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Doctor Appointment\", startsAt = List(DateTimeClause.dateByMdy(month = \"APRIL\", day = 16), DateTimeClause.timeByHm(hour = 8, amOrPm = \"am\"))))\n}"}
{"qid": "1c93cb9b-cbee-4ad9-8e49-5f51bbc8a467.1", "query": "make an event for tomorrow at 3 pm", "scala": "def answer() = {\n    api.addEvent(Event(startsAt = List(DateTimeValues.Tomorrow, DateTimeClause.timeByHm(hour = 3, amOrPm = \"pm\"))))\n}"}
{"qid": "01afdfef-4308-4d1e-a6a4-537e68f12c78.7", "query": "Ok schedule a time to call Mom and Dad on June 7 .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Call Mom and Dad\", startsAt = List(DateTimeClause.dateByMdy(month = \"JUNE\", day = 7))))\n}"}
{"qid": "e5373136-266a-4ab8-99f7-8bc2c82ccedb.3", "query": "Add engagement party to monday 9 pm with Abby kim and desi", "scala": "def answer() = {\n    val abby = api.findPerson(\"Abby\")\n    val kim = api.findPerson(\"Kim\")\n    val desi = api.findPerson(\"Desi\")\n    api.addEvent(Event(subject = \"Engagement Party\", attendees = List(abby, kim, desi), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Monday\"), DateTimeClause.timeByHm(hour = 9, amOrPm = \"pm\"))))\n}"}
{"qid": "62b5932e-fb45-4840-a464-145a6c287e44.0", "query": "Create event \" Jessica 's Baby Shower \" at 1 pm on December 21", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Jessica's Baby Shower\", startsAt = List(DateTimeClause.dateByMdy(month = 12, day = 21), DateTimeClause.timeByHm(hour = 1, amOrPm = \"pm\"))))\n}"}
{"qid": "a27a2eba-1a7f-4927-bcb3-834bc3fd0283.1", "query": "I would also like to schedule a dinner at the 10 : 00 pm tomorrow at the Olive Garden at Time 's Square .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Dinner at Olive Garden\", location = \"Times Square\", startsAt = List(DateTimeValues.Tomorrow, DateTimeClause.timeByHm(hour = 10, amOrPm = \"pm\"))))\n}"}
{"qid": "a329c265-45b9-4db7-ac59-e66e118872ad.0", "query": "Schedule a family dinner at Shoneys for Sunday at 2 : 00 pm for 1 . 5 hours .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Family Dinner\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Sunday\"), DateTimeClause.timeByHm(hour = 2, amOrPm = \"pm\")), duration = Some(TimeUnit(number = 1.5, unit = TimeUnits.Hours)), location = Some(\"Shoneys\")))\n}"}
{"qid": "1c3d6991-72b5-40db-88fe-b818fa29e167.2", "query": "ok create a schedule for return my purchase from your store", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Return Purchase\", startsAt = List(DateTimeValues.Today)))\n}"}
{"qid": "64ef9311-9e92-4fda-821d-ad8a75d2c38e.0", "query": "Make an event for A work Meeting this Thursday at 2 pm", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Work Meeting\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Thursday\"), DateTimeClause.timeByHm(hour = 2, amOrPm = \"pm\"))))\n}"}
{"qid": "9bfda2fa-12e9-4984-9158-9873878d648d.0", "query": "can you book a dinner date with jack at 7 pm today ?", "scala": "def answer() = {\n    val jack = api.findPerson(\"Jack\")\n    api.addEvent(Event(subject = \"Dinner Date with Jack\", attendees = List(jack), startsAt = List(DateTimeValues.Today, DateTimeClause.timeByHm(hour = 7, amOrPm = \"pm\"))))\n}"}
{"qid": "d81815b8-bb4a-459e-acc5-9b63803ebd4c.1", "query": "Make an appointment in Central Park on Friday .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Appointment in Central Park\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Friday\")), location = \"Central Park\"))\n}"}
{"qid": "f37c0615-0467-40f1-80fa-b9c4e3caaba5.0", "query": "Can you set a meeting with Mary on Friday at 11 ?", "scala": "def answer() = {\n    api.addEvent(Event(attendees = List(api.findPerson(\"Mary\")), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Friday\"), DateTimeClause.timeByHm(hour = 11, amOrPm = \"am\"))))\n}"}
{"qid": "e1165dbe-05f7-4962-8abd-69e0de8c5be4.4", "query": "Set up Visit to the Farm on Sunday at 5 pm .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Visit to the Farm\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Sunday\"), DateTimeClause.timeByHm(hour = 5, amOrPm = \"pm\"))))\n}"}
{"qid": "807f408c-854c-4b3d-8725-4cb3d06fe766.0", "query": "Add final exam Tuesday at 11 AM .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Final Exam\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Tuesday\"), DateTimeClause.timeByHm(hour = 11, amOrPm = \"am\"))))\n}"}
{"qid": "6596d665-8660-47be-9d53-149d5056c934.0", "query": "Create Kids Outing for July 28 th at 2 pm and set location to Waterworks .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Kids Outing\", startsAt = List(DateTimeClause.dateByMdy(month = \"JULY\", day = 28), DateTimeClause.timeByHm(hour = 2, amOrPm = \"pm\")), location = \"Waterworks\"))\n}"}
{"qid": "ba6d9af0-bcc1-489f-af9a-e84726a8ce78.3", "query": "Make an event for monday at 4 pm", "scala": "def answer() = {\n    api.addEvent(Event(startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Monday\"), DateTimeClause.timeByHm(hour = 4, amOrPm = \"pm\"))))\n}"}
{"qid": "c36c4757-3619-45c2-a142-59bbec7f868c.5", "query": "Add Jay 's birthday to today", "scala": "def answer() = {\n    val jay = api.findPerson(\"Jay\")\n    api.addEvent(Event(subject = \"Jay's Birthday\", startsAt = List(DateTimeValues.Today)))\n}"}
{"qid": "17afbe33-7f02-4f79-8ff0-df0d15167c82.0", "query": "Who is Jareds manager ?", "scala": "def answer(): \n    api.findPerson(\"Jareds\").findManagerOf()"}
{"qid": "4e2dfa25-c36f-496c-8624-54bd79ef0e46.0", "query": "add yard work for 2 hours", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Yard Work\", duration = TimeUnit(number = 2, unit = TimeUnits.Hours)))\n}"}
{"qid": "49ed358b-26d2-4a8e-a571-9765bef7019b.0", "query": "Make an event for next Saturday called \" Happy fun time for friends . \"", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Happy fun time for friends\", startsAt = List(DateTimeValues.NextWeekend)))\n}"}
{"qid": "ed0aebb5-6f81-443e-98d3-d43115208b7a.0", "query": "Please create an event for next monday at 10 am to last through the end of day", "scala": "def answer() = {\n    api.addEvent(Event(startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Monday\"), DateTimeClause.timeByHm(hour = 10, amOrPm = \"am\")), endsAt = List(DateTimeValues.EndOfWorkDay)))\n}"}
{"qid": "580cfa43-d9f9-416c-9f6c-0a97620dfdc4.3", "query": "Schedule a soccer match with Pedro tomorrow afternoon .", "scala": "def answer() = {\n    val pedro = api.findPerson(\"Pedro\")\n    api.addEvent(Event(subject = \"Soccer Match\", attendees = List(pedro), startsAt = List(DateTimeValues.Tomorrow, DateTimeValues.Afternoon)))\n}"}
{"qid": "ad06ce50-1816-40e9-94fb-e48000860c57.4", "query": "create an event for monday", "scala": "def answer() = {\n    api.addEvent(Event(startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Monday\"))))\n}"}
{"qid": "37bddf10-6b73-470e-b85d-7a102c469378.1", "query": "Create a meeting in the afternoon on Monday", "scala": "def answer() = {\n    api.addEvent(Event(startsAt = List(DateTimeValues.Afternoon, DateTimeClause.getNextDow(dayOfWeek = \"Monday\"))))\n}"}
{"qid": "2730cbbf-a74f-4715-9c00-540550375e32.4", "query": "I had a meeting with Bob last tuesday at 9 am about financing a truck", "scala": "def answer() = {\n    val bob = api.findPerson(\"Bob\")\n    api.addEvent(Event(subject = \"Meeting about financing a truck\", attendees = List(bob), startsAt = List(DateTimeValues.LastWeekNew, DateTimeClause.getNextDow(dayOfWeek = \"Tuesday\"), DateTimeClause.timeByHm(hour = 9, amOrPm = \"am\"))))\n}"}
{"qid": "d11b4ff1-fd85-48c5-a06d-232a431a758a.0", "query": "Schedule a one - hour fundraising prep meeting for Thursday at 10 : 45 am .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Fundraising Prep Meeting\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Thursday\"), DateTimeClause.timeByHm(hour = 10, minute = 45, amOrPm = \"am\")), duration = TimeUnit(number = 1, unit = TimeUnits.Hours)))\n}"}
{"qid": "9a59269f-58c4-40f5-8e9a-8f2c0a6912a6.1", "query": "Okay , can you just add , Trip to San Rafael for Saturday at 11 am ?", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Trip to San Rafael\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Saturday\"), DateTimeClause.timeByHm(hour = 11, amOrPm = \"am\"))))\n}"}
{"qid": "9ab55ab5-bfdf-4965-862a-9ee4c1f44de2.7", "query": "I need a meeting with Kyle next week .", "scala": "def answer() = {\n    api.addEvent(Event(attendees = List(api.findPerson(\"Kyle\")), startsAt = List(DateTimeValues.NextWeekList)))\n}"}
{"qid": "1a752ca1-3c46-4fca-a35e-9cd588c3aad2.0", "query": "Create a meeting at 6 pm", "scala": "def answer() = {\n    api.addEvent(Event(startsAt = List(DateTimeClause.timeByHm(hour = 6, amOrPm = \"pm\"))))\n}"}
{"qid": "1062d486-9e34-4fc8-ac17-695886cb04db.0", "query": "Add Flight from Calgary Airport Sunday at 8 am .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Flight from Calgary Airport\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Sunday\"), DateTimeClause.timeByHm(hour = 8, amOrPm = \"am\"))))\n}"}
{"qid": "b802ef88-6d3b-42c5-8f65-0cc6d51310e6.0", "query": "can you please schedule a meeting with Jane at 10 am on Friday", "scala": "def answer() = {\n    val jane = api.findPerson(\"Jane\")\n    api.addEvent(Event(subject = \"Meeting with Jane\", attendees = List(jane), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Friday\"), DateTimeClause.timeByHm(hour = 10, amOrPm = \"am\"))))\n}"}
{"qid": "02724824-6375-4b12-b761-b82be85bd3d5.0", "query": "Put exercise on the schedule for tomorrow morning .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Exercise\", startsAt = List(DateTimeValues.Tomorrow, DateTimeValues.Morning)))\n}"}
{"qid": "1fee6215-550b-4ce3-a355-1b5d46b2a6e4.0", "query": "put meeting with kiran and meeria", "scala": "def answer() = {\n    val attendees = List(api.findPerson(\"Kiran\"), api.findPerson(\"Meeria\"))\n    api.addEvent(Event(attendees = attendees))\n}"}
{"qid": "b5bf4e67-534c-4571-b85b-6ebba371745c.0", "query": "Create a lunch with Cher", "scala": "def answer() = {\n    val cher = api.findPerson(\"Cher\")\n    api.addEvent(Event(subject = \"Lunch with Cher\", attendees = List(cher)))\n}"}
{"qid": "a8176062-7726-40c5-98e7-385e38a7da07.5", "query": "Add to schedule icecream on Friday at 5 : 00 pm .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Icecream\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Friday\"), DateTimeClause.timeByHm(hour = 5, amOrPm = \"pm\"))))\n}"}
{"qid": "678f4940-2a97-4265-b13e-ee78cf4d049d.3", "query": "I need to set up a meeting with Kim on Friday for my promotion .", "scala": "def answer() = {\n    val kim = api.findPerson(\"Kim\")\n    api.addEvent(Event(subject = \"Promotion Meeting\", attendees = List(kim), startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Friday\"))))\n}"}
{"qid": "ee36cbcc-c4fe-4aa5-af52-2a126d5fd692.3", "query": "Schedule a lunch meeting on Friday at 2 pm .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Lunch Meeting\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Friday\"), DateTimeClause.timeByHm(hour = 2, amOrPm = \"pm\"))))\n}"}
{"qid": "2d55efd5-9f62-42de-b21c-1e2fd2acd970.2", "query": "Okay great , can you add take Seymour to the Dog Park on Sunday from 11 am to 12 : 30 pm", "scala": "def answer() = {\n    val seymour = api.findPerson(\"Seymour\")\n    api.addEvent(Event(subject = \"Take Seymour to the Dog Park\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Sunday\"), DateTimeClause.timeByHm(hour = 11, amOrPm = \"am\")), endsAt = List(DateTimeClause.timeByHm(hour = 12, minute = 30, amOrPm = \"pm\"))))\n}"}
{"qid": "d3a3723f-54f7-4774-bfdd-78c2e8f0a45d.0", "query": "Can you add an event to my calendar called doctor for tomorrow ?", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Doctor\", startsAt = List(DateTimeValues.Tomorrow)))\n}"}
{"qid": "d2c10c1c-1910-4dd6-9ef4-6df579a69b40.1", "query": "Can you add a doctor appointment", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Doctor Appointment\"))\n}"}
{"qid": "593f17d2-01eb-4362-ab11-0c7440289f9d.4", "query": "Nice , and book me a room at Berkeley", "scala": "def answer() = {\n    api.addEvent(Event(location = \"Berkeley\"))\n}"}
{"qid": "a5fe7256-595e-4c7f-b4b0-736d0c43d908.0", "query": "Put lunch with Paige in my calendar", "scala": "def answer() = {\n    val paige = api.findPerson(\"Paige\")\n    api.addEvent(Event(subject = \"Lunch with Paige\", attendees = List(paige)))\n}"}
{"qid": "c5b7bff1-d530-42f3-a190-0be6715e7902.0", "query": "Put my orthopedist appointment on the calendar for Thursday at 1 : 40 .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Orthopedist Appointment\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Thursday\"), DateTimeClause.timeByHm(hour = 1, minute = 40, amOrPm = \"pm\"))))\n}"}
{"qid": "de183c73-0766-47da-bfc5-77aea0a8aafc.2", "query": "Set an even for Tuesday", "scala": "def answer() = {\n    api.addEvent(Event(startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Tuesday\"))))\n}"}
{"qid": "4ee1ab18-0bf8-43bb-ac50-baf6e0d0af70.3", "query": "I have a Magic tournament on Saturday from 8 : 00 AM until 3 : 00 PM .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Magic Tournament\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Saturday\"), DateTimeClause.timeByHm(hour = 8, amOrPm = \"am\")), endsAt = List(DateTimeClause.timeByHm(hour = 3, amOrPm = \"pm\"))))\n}"}
{"qid": "f76b84af-08de-4175-8403-5d246b7613e8.3", "query": "set the dinner with Hannah at 3 pm", "scala": "def answer() = {\n    val hannah = api.findPerson(\"Hannah\")\n    api.addEvent(Event(subject = \"Dinner with Hannah\", attendees = List(hannah), startsAt = List(DateTimeClause.timeByHm(hour = 3, amOrPm = \"pm\"))))\n}"}
{"qid": "fb3b21dc-bfad-4b9a-b346-2c85128ed06d.2", "query": "schedule lunch with Jonny in seattle aug 15 around 1 pm", "scala": "def answer() = {\n    val jonny = api.findPerson(\"Jonny\")\n    api.addEvent(Event(subject = \"Lunch with Jonny\", attendees = List(jonny), location = \"Seattle\", startsAt = List(DateTimeClause.dateByMdy(month = \"AUGUST\", day = 15), DateTimeClause.timeByHm(hour = 1, amOrPm = \"pm\")), showAsStatus = ShowAsStatusType.Busy))\n}"}
{"qid": "9b1645f0-7ce5-4d33-8511-8ff9f5b3feca.0", "query": "I need to add my haircut tomorrow at 10 am for 2 hours at Studio 121", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Haircut\", startsAt = List(DateTimeValues.Tomorrow, DateTimeClause.timeByHm(hour = 10, amOrPm = \"am\")), duration = Some(TimeUnit(number = 2, unit = TimeUnits.Hours)), location = Some(\"Studio 121\")))\n}"}
{"qid": "9b13bf9f-695c-4b83-bf9e-c366ea17c56c.0", "query": "I 'm going to Whimbley Stadium on the 5 th .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Whimbley Stadium\", startsAt = List(nextDayOfMonth(DateTimeValues.Today, dayOfMonth = 5))))\n}"}
{"qid": "633e5842-30ab-483a-8889-531a2b10ca46.0", "query": "I have a vet appointment on saturday . Can you put that on the calendar for me ?", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Vet Appointment\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Saturday\"))))\n}"}
{"qid": "aa28780b-fe85-4f9c-bc4b-b6ec1e7b9b3d.0", "query": "Let 's make a schedule for 4 today .", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Schedule\", startsAt = List(DateTimeValues.Today, DateTimeClause.timeByHm(hour = 4, amOrPm = \"pm\"))))\n}"}
{"qid": "f230ef0c-d954-4cfe-83a4-495e224cac2c.2", "query": "Book a 3 hour flight to Seattle with Max , Daniel , and Jacob .", "scala": "def answer() = {\n    val attendees = List(api.findPerson(\"Max\"), api.findPerson(\"Daniel\"), api.findPerson(\"Jacob\"))\n    api.addEvent(Event(subject = \"Flight to Seattle\", attendees = attendees, duration = TimeUnit(number = 3, unit = TimeUnits.Hours), location = \"Seattle\"))\n}"}
{"qid": "764753cb-30a6-4500-8c76-243d9a36f275.0", "query": "I need a meeting with Abby tomorrow at 8 : 30 pm .", "scala": "def answer() = {\n    val abby = api.findPerson(\"Abby\")\n    api.addEvent(Event(subject = \"Meeting with Abby\", attendees = List(abby), startsAt = List(DateTimeValues.Tomorrow, DateTimeClause.timeByHm(hour = 8, minute = 30, amOrPm = \"pm\"))))\n}"}
{"qid": "9093706d-02bd-4648-9287-2e825977c42b.1", "query": "schedule Get New Grubbs next sunday", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Get New Grubbs\", startsAt = List(DateTimeClause.getNextDow(dayOfWeek = \"Sunday\"))))\n}"}
{"qid": "3a72dc0c-1f64-432a-b8b1-9545f0edb05f.0", "query": "I need to study for test at 8 pm", "scala": "def answer() = {\n    api.addEvent(Event(subject = \"Study for Test\", startsAt = List(DateTimeClause.timeByHm(hour = 8, amOrPm = \"pm\"))))\n}"}
