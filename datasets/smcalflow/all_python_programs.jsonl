{"qid": "0bec0139-79a2-40d1-a37c-c433d7ade008.6", "query": "I need to get a meeting scheduled for tomorrow afternoon with Scot Hanson", "python": "def answer():\n    scot = api.find_person(\"Scot Hanson\")\n    api.add_event(Event(subject=\"Meeting with Scot Hanson\", attendees=[scot], starts_at=[DateTimeValues.Tomorrow, DateTimeValues.Afternoon]))"}
{"qid": "4ab72b58-7bbe-4743-8b73-42ecc87363e3.0", "query": "Add a meeting with Sarah for tomorrow at 1 pm .", "python": "def answer():\n    sarah = api.find_person(\"Sarah\")\n    api.add_event(Event(subject=\"Meeting with Sarah\", attendees=[sarah], starts_at=[DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=1, am_or_pm=\"pm\")]))"}
{"qid": "41ea55f9-348a-4449-bc3e-590a62a287b2.3", "query": "Also schedule Basketball Game tomorrow at 6 : 30 pm .", "python": "def answer():\n    api.add_event(Event(subject=\"Basketball Game\", starts_at=[DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=6, minute=30, am_or_pm=\"pm\")]))"}
{"qid": "6a9ee489-d297-49b1-b8a5-cf59b00bacba.2", "query": "Can you add Go to Barnes and Noble at the end of the day on Friday ?", "python": "def answer():\n    api.add_event(Event(subject=\"Go to Barnes and Noble\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\"), DateTimeValues.EndOfWorkDay]))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Go to Barnes and Noble\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\"), DateTimeValues.EndOfWorkDay]))", "python_multiline": "def answer():\n    friday = DateTimeClause.get_next_dow(day_of_week=\"Friday\")\n    end_of_day = DateTimeValues.EndOfWorkDay\n    event = Event(subject=\"Go to Barnes and Noble\", starts_at=[friday, end_of_day])\n    api.add_event(event)", "python_multiline_discarded": "def answer():\n    friday = DateTimeClause.get_next_dow(day_of_week=\"Friday\")\n    end_of_day = DateTimeValues.EndOfWorkDay\n    event = Event(subject=\"Go to Barnes and Noble\", starts_at=[friday, end_of_day])\n    api.add_event(event)", "python_oneline_discarded": "def answer():\n    api.add_event(Event(subject=\"Go to Barnes and Noble\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\"), DateTimeValues.EndOfWorkDay]))"}
{"qid": "ca15b261-5f71-4532-b8dc-441fa68e7993.0", "query": "Can you add a lunch meeting to my schedule for an hour and half on Thursday at noon , and please invite Alyssa to that .", "python": "def answer():\n    api.add_event(Event(subject=\"Lunch Meeting\", attendees=[api.find_person(\"Alyssa\")], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeValues.Noon], duration=TimeUnit(1.5, unit=TimeUnits.Hours)))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Lunch Meeting\", attendees=[api.find_person(\"Alyssa\")], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeValues.Noon], duration=TimeUnit(1.5, unit=TimeUnits.Hours)))", "python_multiline": "def answer():\n    thursday = DateTimeClause.get_next_dow(day_of_week=\"Thursday\")\n    noon = DateTimeValues.Noon\n    duration = TimeUnit(1.5, unit=TimeUnits.Hours)\n    alyssa = api.find_person(\"Alyssa\")\n    lunch_meeting = Event(subject=\"Lunch Meeting\", attendees=[alyssa], starts_at=[thursday, noon], duration=duration)\n    api.add_event(lunch_meeting)", "python_multiline_discarded": "def answer():\n    thursday = DateTimeClause.get_next_dow(day_of_week=\"Thursday\")\n    noon = DateTimeValues.Noon\n    duration = TimeUnit(1.5, unit=TimeUnits.Hours)\n    alyssa = api.find_person(\"Alyssa\")\n    lunch_meeting = Event(subject=\"Lunch Meeting\", attendees=[alyssa], starts_at=[thursday, noon], duration=duration)\n    api.add_event(lunch_meeting)", "python_oneline_discarded": "def answer():\n    return api.add_event(Event(subject=\"Lunch Meeting\", attendees=[api.find_person(\"Alyssa\")], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeValues.Noon], duration=TimeUnit(1.5, unit=TimeUnits.Hours)))"}
{"qid": "d5dd6726-b313-449e-84fe-bdbdc3b0b8d6.0", "query": "Can you add dinner at The Melting Pot on Saturday at 8 PM ?", "python": "def answer():\n    api.add_event(Event(subject=\"Dinner at The Melting Pot\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Saturday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"pm\")], location=\"The Melting Pot\"))"}
{"qid": "4580d96c-fa36-4002-bc08-718b23c098c5.0", "query": "Add shopping starting at 9 am saturday at the mall of america for 6 hours", "python": "def answer():\n    api.add_event(Event(subject=\"Shopping\", starts_at=[DateTimeClause.time_by_hm(hour=9, am_or_pm=\"am\"), DateTimeClause.get_next_dow(day_of_week=\"Saturday\")], duration=TimeUnit(6, unit=TimeUnits.Hours), location=\"Mall of America\"))"}
{"qid": "20d389e6-163b-4afa-a421-f5b9f404d145.12", "query": "Make a party for Cher Roydon at 5 pm", "python": "def answer():\n    cher = api.find_person(\"Cher Roydon\")\n    api.add_event(Event(subject=\"Party for Cher Roydon\", attendees=[cher], starts_at=[DateTimeClause.time_by_hm(hour=5, am_or_pm=\"pm\")]))"}
{"qid": "1b989119-89d7-472e-9ae1-01112f8e6961.2", "query": "Create a meeting in the afternoon on Monday", "python": "def answer():\n    api.add_event(Event(starts_at=[DateTimeValues.Afternoon, DateTimeClause.get_next_dow(day_of_week=\"Monday\")]))"}
{"qid": "e5b526eb-16dc-4578-96a4-c51d20b59d7c.0", "query": "Add a meeting with John to discuss the new partner on Tuesday at 4 : 00 pm .", "python": "def answer():\n    john = api.find_person(\"John\")\n    api.add_event(Event(subject=\"Meeting to discuss new partner\", attendees=[john], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Tuesday\"), DateTimeClause.time_by_hm(hour=4, am_or_pm=\"pm\")]))"}
{"qid": "e144f61d-b1f2-4546-a8a7-3886681d5bcf.1", "query": "Schedule a dentist appointment today for 3 : 00 pm .", "python": "def answer():\n    api.add_event(Event(subject=\"Dentist Appointment\", starts_at=[DateTimeValues.Today, DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")]))"}
{"qid": "bba573d0-b142-4376-8476-0b1b247859e7.0", "query": "Please add an appointment at 4 o'clock", "python": "def answer():\n    api.add_event(Event(subject=\"Appointment\", starts_at=[DateTimeClause.time_by_hm(hour=4, am_or_pm=\"pm\")]))"}
{"qid": "6af2f273-28f7-4134-9d8b-5a2c0e23091e.0", "query": "Set up a trip to the zoo for 4 hours", "python": "def answer():\n    api.add_event(Event(subject=\"Trip to the Zoo\", duration=TimeUnit(4, unit=TimeUnits.Hours)))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Trip to the Zoo\", duration=TimeUnit(4, unit=TimeUnits.Hours)))", "python_multiline": "def answer():\n    duration = TimeUnit(4, unit=TimeUnits.Hours)\n    event = Event(subject=\"Trip to the Zoo\", duration=duration)\n    api.add_event(event)", "python_multiline_discarded": "def answer():\n    duration = TimeUnit(4, unit=TimeUnits.Hours)\n    event = Event(subject=\"Trip to the Zoo\", duration=duration)\n    api.add_event(event)", "python_oneline_discarded": "def answer():\n     api.add_event(Event(subject=\"Trip to the Zoo\", duration=TimeUnit(4, unit=TimeUnits.Hours)))"}
{"qid": "b1d45d71-b200-4d54-b257-aa38e4e6667b.1", "query": "Can you make a new event for Friday at 10 am", "python": "def answer():\n    api.add_event(Event(starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\"), DateTimeClause.time_by_hm(hour=10, am_or_pm=\"am\")]))"}
{"qid": "0461960a-16ee-41e3-bc45-0cb2184825df.0", "query": "Make an event for me on Monday for swimming", "python": "def answer():\n    api.add_event(Event(subject=\"Swimming\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Monday\")]))"}
{"qid": "3578c45b-5064-42a8-859d-e78656e81132.2", "query": "Finally I have a family dinner this saturday at 6 pm for 2 hours , at home .", "python": "def answer():\n    api.add_event(Event(subject=\"Family Dinner\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Saturday\"), DateTimeClause.time_by_hm(hour=6, am_or_pm=\"pm\")], duration=Hours(2), location=\"Home\"))"}
{"qid": "cc936d51-f879-4ed3-9c4d-bfbb1bf8ae78.0", "query": "Add lunch with Lauren for 12 : 00 tomorrow", "python": "def answer():\n    api.add_event(Event(subject=\"Lunch with Lauren\", attendees=[api.find_person(\"Lauren\")], starts_at=[DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=12, am_or_pm=\"pm\")]))"}
{"qid": "cdbb1897-b2f2-452d-8df0-1fb5f20d9230.0", "query": "I need to add a one on one with Shelby to my calendar on Thursday at 2 pm for 10 minutes", "python": "def answer():\n    shelby = api.find_person(\"Shelby\")\n    api.add_event(Event(subject=\"One-on-One with Shelby\", attendees=[shelby], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")], duration=TimeUnit(10, unit=TimeUnits.Minutes)))"}
{"qid": "9db154b8-49b6-47c8-b2e8-d2df819e0c11.2", "query": "Please also add my dinner with Maria last night .", "python": "def answer():\n    maria = api.find_person(\"Maria\")\n    api.add_event(Event(subject=\"Dinner with Maria\", attendees=[maria], starts_at=[DateTimeValues.LastWeekNew, DateTimeValues.Night]))"}
{"qid": "db1f5c8c-6de3-480a-acbe-ba707a5f4a2e.0", "query": "will you schedule me a hike this sunday at 11 AM", "python": "def answer():\n    api.add_event(Event(subject=\"Hike\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")]))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Hike\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")]))", "python_multiline": "def answer():\n    start_time = DateTimeClause.get_next_dow(day_of_week=\"Sunday\")\n    event_time = DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")\n    event = Event(subject=\"Hike\", starts_at=[start_time, event_time])\n    api.add_event(event)", "python_multiline_discarded": "def answer():\n    start_time = DateTimeClause.get_next_dow(day_of_week=\"Sunday\")\n    event_time = DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")\n    event = Event(subject=\"Hike\", starts_at=[start_time, event_time])\n    api.add_event(event)", "python_oneline_discarded": "def answer():\n     return api.add_event(Event(subject=\"Hike\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")]))"}
{"qid": "0c49f297-9c00-46a5-a90e-9485445cc10e.3", "query": "What is the name of Dan Marton 's skip ? I do not see him on the list of attendees .", "python": "def answer():\n    return api.find_person(\"Dan Marton\").find_manager_of().find_manager_of()", "python_oneline": "def answer():\n    return api.find_person(\"Dan Marton\").find_manager_of().find_manager_of()", "python_multiline": "def answer():\n    person = api.find_person(\"Dan Marton\")\n    manager = person.find_manager_of()\n    skip = manager.find_manager_of()\n    return skip", "python_multiline_discarded": "def answer():\n    person = api.find_person(\"Dan Marton\")\n    manager = person.find_manager_of()\n    skip = manager.find_manager_of()\n    return skip", "python_oneline_discarded": "def answer(): return api.find_person(\"Dan Marton\").find_manager_of().find_manager_of()"}
{"qid": "ea17b036-82d9-4100-8c51-bf6535e60be1.0", "query": "Schedule meeting with Tom for 8 am Friday for one hour .", "python": "def answer():\n    tom = api.find_person(\"Tom\")\n    api.add_event(Event(subject=\"Meeting with Tom\", attendees=[tom], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")], duration=TimeUnit(1, unit=TimeUnits.Hours)))"}
{"qid": "ba63732e-900b-42cd-b4d4-5ad8890da791.0", "query": "I need to add a lunch meeting with Susan , Sue , Karen , and Kate Thursday at 11 .", "python": "def answer():\n    susan = api.find_person(\"Susan\")\n    sue = api.find_person(\"Sue\")\n    karen = api.find_person(\"Karen\")\n    kate = api.find_person(\"Kate\")\n    api.add_event(Event(subject=\"Lunch Meeting\", attendees=[susan, sue, karen, kate], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")]))"}
{"qid": "c324fdbe-0f99-4153-9fcd-72b852375f08.0", "query": "Add Met with Conan to yesterday at 1 PM .", "python": "def answer():\n    conan = api.find_person(\"Conan\")\n    api.add_event(Event(subject=\"Met with Conan\" attendees=[conan], starts_at=[DateTimeValues.Yesterday, DateTimeClause.time_by_hm(hour=1, am_or_pm=\"pm\")]))"}
{"qid": "24cf0086-f7ec-4a6e-83fa-1b60a9e88f25.0", "query": "Can you set up a meeting tomorrow with Liz , kim and Ray ?", "python": "def answer():\n   attendees = [api.find_person(\"Liz\"), api.find_person(\"Kim\"), api.find_person(\"Ray\")]\n    api.add_event(Event(attendees=attendees, starts_at=[DateTimeValues.Tomorrow]))"}
{"qid": "4843715c-18cc-491e-8372-08e9dd1ba4d4.0", "query": "Create a meeting with Alex on Sunday", "python": "def answer():\n    api.add_event(Event(attendees=[api.find_person(\"Alex\")], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\")]))"}
{"qid": "4dae2686-cb1c-4e6c-ab61-f29c76874bd7.3", "query": "Please add lunch from 12 to 2 on Friday the 25 th .", "python": "def answer():\n    date = nextDayOfMonth(DateTimeValues.Today, day_of_month=25)\n    api.add_event(Event(subject=\"lunch\", starts_at=[date, DateTimeClause.time_by_hm(hour=12, am_or_pm=\"pm\")], ends_at=[date, DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")]))"}
{"qid": "f73c7f2d-b9f0-421f-9b4f-37b2b27b6f31.0", "query": "Hi , can you please add a working lunch with Luke on Tuesday from 12 : 30 til 1 : 45 pm ?", "python": "def answer():\n    luke = api.find_person(\"Luke\")\n    api.add_event(Event(subject=\"Working Lunch with Luke\", attendees=[luke], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Tuesday\"), DateTimeClause.time_by_hm(hour=12, minute=30, am_or_pm=\"pm\")], ends_at=[DateTimeClause.time_by_hm(hour=1, minute=45, am_or_pm=\"pm\")]))"}
{"qid": "9c9bb838-6dd9-4e99-9ae9-a19e5873bc71.1", "query": "can you add play golf on tuesday ?", "python": "def answer():\n    api.add_event(Event(subject=\"Play Golf\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Tuesday\")]))"}
{"qid": "69a97fbd-fc8c-4002-ba4a-176ee4eaad7f.0", "query": "I will be destroying a nation for 3 hours", "python": "def answer():\n    api.add_event(Event(subject=\"Destroying a Nation\", duration=TimeUnit(3, unit=TimeUnits.Hours)))"}
{"qid": "1daea84a-f8d4-4174-9045-ea4b8d60e872.1", "query": "Can you Schedule a Buyers Meeting this Friday", "python": "def answer():\n    api.add_event(Event(subject=\"Buyers Meeting\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\")]))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Buyers Meeting\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\")]))", "python_multiline": "def answer():\n    friday = DateTimeClause.get_next_dow(day_of_week=\"Friday\")\n    event = Event(subject=\"Buyers Meeting\", starts_at=[friday])\n    api.add_event(event)", "python_multiline_discarded": "def answer():\n    friday = DateTimeClause.get_next_dow(day_of_week=\"Friday\")\n    event = Event(subject=\"Buyers Meeting\", starts_at=[friday])\n    api.add_event(event)", "python_oneline_discarded": "def answer():\n     api.add_event(Event(subject=\"Buyers Meeting\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\")]))"}
{"qid": "f4352b5f-f615-4fba-a586-19d0a2909fcb.2", "query": "Make an event to to walking on Monday", "python": "def answer():\n    api.add_event(Event(subject=\"Walking\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Monday\")]))"}
{"qid": "44c1a444-d21a-45fe-bd2e-035178c63892.2", "query": "I 'll be gone starting friday for 3 days to GET LIT", "python": "def answer():\n    api.add_event(Event(subject=\"GET LIT\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\")], duration=Days(3)))"}
{"qid": "b8c1c39e-0375-4585-8dfe-a0b3d011ca65.3", "query": "Can you add a meeting with Beth at 5 pm on Tuesday ?", "python": "def answer():\n    beth = api.find_person(\"Beth\")\n    api.add_event(Event(subject=\"Meeting with Beth\", attendees=[beth], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Tuesday\"), DateTimeClause.time_by_hm(hour=5, am_or_pm=\"pm\")]))"}
{"qid": "8e4c181f-cabd-4c8e-9b1b-f127b46273d4.0", "query": "Please add a lunch meeting on Friday at 1 at Laughing Seed Cafe in Asheville", "python": "def answer():\n    api.add_event(Event(subject=\"Lunch Meeting\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\"), DateTimeClause.time_by_hm(hour=1, am_or_pm=\"pm\")], location=\"Laughing Seed Cafe in Asheville\"))"}
{"qid": "aaf3fd99-e3b1-49ac-a2e7-3acf311160a9.0", "query": "William 's birthday March 18 th", "python": "def answer():\n    william = api.find_person(\"William\")\n    api.add_event(Event(subject=\"William's Birthday\", starts_at=[DateTimeClause.date_by_mdy(month=\"MARCH\", day=18)]))"}
{"qid": "58395ec0-c17d-49a2-9a66-cfdb0f2c93b2.4", "query": "Schedule Run Marathon on August 7 th at 8 am .", "python": "def answer():\n    api.add_event(Event(subject=\"Run Marathon\", starts_at=[DateTimeClause.date_by_mdy(month=\"AUGUST\", day=7), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")]))"}
{"qid": "323dd7da-c090-443c-8d96-3eb9e8c8fa62.0", "query": "create meeting with damon sykes tomorrow at 5", "python": "def answer():\n    damon = api.find_person(\"Damon Sykes\")\n    api.add_event(Event(subject=\"Meeting with Damon Sykes\", attendees=[damon], starts_at=[DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=5, am_or_pm=\"pm\")]))"}
{"qid": "1a31d7ce-8646-4664-9e35-8e8b054f865e.0", "query": "please set the meeting on paul", "python": "def answer():\n    paul = api.find_person(\"Paul\")\n    api.add_event(Event(subject=\"Meeting\", attendees=[paul]))"}
{"qid": "4fbfeb53-33e6-470e-8fe1-82cad69c7011.2", "query": "Thank you and can you make a new appointment for next Tuesday ?", "python": "def answer():\n    api.add_event(Event(starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Tuesday\")]))"}
{"qid": "bd5d8071-c855-43b0-8247-4c775b10f979.1", "query": "Who are my reports ?", "python": "def answer():\n    return api.get_current_user().find_reports_of()", "python_oneline": "def answer():\n    return api.get_current_user().find_reports_of()", "python_multiline": "def answer():\n    current_user = api.get_current_user()\n    reports = current_user.find_reports_of()\n    return reports", "python_multiline_discarded": "def answer():\n    current_user = api.get_current_user()\n    reports = current_user.find_reports_of()\n    return reports", "python_oneline_discarded": "def answer():\n     return api.get_current_user().find_reports_of()"}
{"qid": "2a494fe9-b745-4bf2-abbd-054b5c054736.0", "query": "I must heed the Anthem of the Gods today from 5 pm to 9 pm", "python": "def answer():\n    api.add_event(Event(subject=\"Anthem of the Gods\", starts_at=[DateTimeValues.Today, DateTimeClause.time_by_hm(hour=5, am_or_pm=\"pm\")], ends_at=[DateTimeClause.time_by_hm(hour=9, am_or_pm=\"pm\")]))"}
{"qid": "bf01569f-b384-4155-875c-0c972d586104.0", "query": "Please add calender entry next tuesday with Cornelio", "python": "def answer():\n    cornelio = api.find_person(\"Cornelio\")\n    api.add_event(Event(attendees=[cornelio], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Tuesday\")]))"}
{"qid": "af835800-19eb-4498-8a4d-4139d5d3567b.0", "query": "Make me a dinner party on Tuesday at 7 pm", "python": "def answer():\n    api.add_event(Event(subject=\"Dinner Party\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Tuesday\"), DateTimeClause.time_by_hm(hour=7, am_or_pm=\"pm\")]))"}
{"qid": "86b3445e-080a-47ea-a470-05283bb00328.0", "query": "create basketball game on wednesday at 8", "python": "def answer():\n    api.add_event(Event(subject=\"Basketball Game\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Wednesday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"pm\")]))"}
{"qid": "7eac438e-30b2-429f-8963-eeb1b7cca320.0", "query": "Add doctor 's appointment for 8 : 30 AM on Thursday .", "python": "def answer():\n    api.add_event(Event(subject=\"Doctor's Appointment\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeClause.time_by_hm(hour=8, minute=30, am_or_pm=\"am\")]))"}
{"qid": "2815d0af-ea71-4567-a667-8b117870a459.2", "query": "Can you make an event for Friday at 3 ?", "python": "def answer():\n    api.add_event(Event(starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\"), DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")]))"}
{"qid": "100bb1b7-8a59-4294-9978-6b7cd90efbaf.0", "query": "show movie at 8 today", "python": "def answer():\n    api.add_event(Event(subject=\"Movie\", starts_at=[DateTimeClause.time_by_hm(hour=8, am_or_pm=\"pm\"), DateTimeValues.Today]))"}
{"qid": "181c55d2-0311-4737-91a8-7abdbae6077a.3", "query": "Note that I had a meeting with Lee and Eric yesterday at 2 : 15 pm .", "python": "def answer():\n    lee = api.find_person(\"Lee\")\n    eric = api.find_person(\"Eric\")\n    api.add_event(Event(subject=\"Meeting with Lee and Eric\", attendees=[lee, eric], starts_at=[DateTimeValues.Yesterday, DateTimeClause.time_by_hm(hour=2, minute=15, am_or_pm=\"pm\")]))"}
{"qid": "15226da6-eb1b-438b-9afa-057f73a0e8a2.0", "query": "create a meeting with james today", "python": "def answer():\n    api.add_event(Event(attendees=[api.find_person(\"James\")], starts_at=[DateTimeValues.Today]))"}
{"qid": "7391794a-89d9-45d8-bc4a-58adfe344fb4.1", "query": "please add \" huddle \" to Thursday at 8 am", "python": "def answer():\n    api.add_event(Event(subject=\"huddle\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")]))"}
{"qid": "c9a65cd7-366e-417d-aaca-dd5f4573ab07.0", "query": "Schedule me a coffee event on May 7 th at 8 pm", "python": "def answer():\n    api.add_event(Event(subject=\"Coffee Event\", starts_at=[DateTimeClause.date_by_mdy(month=\"MAY\", day=7), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"pm\")]))"}
{"qid": "53b67481-80ef-4cbc-9157-b99b37d53048.0", "query": "Can you set up something for a phone meeting tomorrow at 2 pm ?", "python": "def answer():\n    api.add_event(Event(subject=\"Phone Meeting\", starts_at=[DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")]))"}
{"qid": "a4d8fa1e-cf83-4541-9b43-8df9ff2122dc.0", "query": "Create a get - together on Mt. Denali for Saturday morning at 9 .", "python": "def answer():\n    api.add_event(Event(subject=\"Get-together on Mt. Denali\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Saturday\"), DateTimeValues.Morning, DateTimeClause.time_by_hm(hour=9, am_or_pm=\"am\")], location=\"Mt. Denali\"))"}
{"qid": "3745161d-c0d1-41a0-9baa-6bb77be2b876.3", "query": "I need to block out time for a book signing . The whole thing will take about 3 hours and I intend to get there at 3 pm on Sunday", "python": "def answer():\n    api.add_event(Event(subject=\"Book Signing\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")], duration=TimeUnit(3, unit=TimeUnits.Hours)))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Book Signing\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")], duration=TimeUnit(3, unit=TimeUnits.Hours)))", "python_multiline": "def answer():\n    event_subject = \"Book Signing\"\n    start_time = DateTimeClause.get_next_dow(day_of_week=\"Sunday\")\n    event_time = DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")\n    event_duration = TimeUnit(3, unit=TimeUnits.Hours)\n    event = Event(subject=event_subject, starts_at=[start_time, event_time], duration=event_duration)\n    api.add_event(event)", "python_multiline_discarded": "def answer():\n    event_subject = \"Book Signing\"\n    start_time = DateTimeClause.get_next_dow(day_of_week=\"Sunday\")\n    event_time = DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")\n    event_duration = TimeUnit(3, unit=TimeUnits.Hours)\n    event = Event(subject=event_subject, starts_at=[start_time, event_time], duration=event_duration)\n    api.add_event(event)", "python_oneline_discarded": "def answer():\n     return api.add_event(Event(subject=\"Book Signing\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")], duration=TimeUnit(3, unit=TimeUnits.Hours)))"}
{"qid": "1272ba6c-34f4-4b3c-862a-52f7c545240a.1", "query": "Create me a meeting with Scot Hanson on Saturday please", "python": "def answer():\n    scot = api.find_person(\"Scot Hanson\")\n    api.add_event(Event(subject=\"Meeting with Scot Hanson\", attendees=[scot], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Saturday\")]))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Meeting with Scot Hanson\", attendees=[api.find_person(\"Scot Hanson\")], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Saturday\")]))", "python_multiline": "def answer():\n    scot = api.find_person(\"Scot Hanson\")\n    api.add_event(Event(subject=\"Meeting with Scot Hanson\", attendees=[scot], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Saturday\")]))", "python_multiline_discarded": "def answer():\n    scot = api.find_person(\"Scot Hanson\")\n    saturday = DateTimeClause.get_next_dow(day_of_week=\"Saturday\")\n    meeting_subject = \"Meeting with Scot Hanson\"\n    attendees = [scot]\n    event = Event(subject=meeting_subject, attendees=attendees, starts_at=[saturday])\n    api.add_event(event)", "python_oneline_discarded": "def answer():\n    api.add_event(Event(subject=\"Meeting with Scot Hanson\", attendees=[api.find_person(\"Scot Hanson\")], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Saturday\")]))"}
{"qid": "e8643786-c3ef-4144-b3f9-d13e0e3860fd.0", "query": "Create a new meeting for thursday at 8 pm", "python": "def answer():\n    api.add_event(Event(starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"pm\")], subject=\"new meeting\"))", "python_oneline": "def answer():\n    api.add_event(Event(starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"pm\")], subject=\"new meeting\"))", "python_multiline": "def answer():\n    thursday = DateTimeClause.get_next_dow(day_of_week=\"Thursday\")\n    time = DateTimeClause.time_by_hm(hour=8, am_or_pm=\"pm\")\n    starts_at = [thursday, time]\n    subject = \"new meeting\"\n    event = Event(starts_at=starts_at, subject=subject)\n    api.add_event(event)", "python_multiline_discarded": "def answer():\n    thursday = DateTimeClause.get_next_dow(day_of_week=\"Thursday\")\n    time = DateTimeClause.time_by_hm(hour=8, am_or_pm=\"pm\")\n    starts_at = [thursday, time]\n    subject = \"new meeting\"\n    event = Event(starts_at=starts_at, subject=subject)\n    api.add_event(event)", "python_oneline_discarded": "def answer():\n     api.add_event(Event(starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"pm\")], subject=\"new meeting\"))"}
{"qid": "f64e44a6-642e-4e12-a531-bbb99a28cb00.4", "query": "make an event for monday at 2 pm for a doctors appointment", "python": "def answer():\n    api.add_event(Event(subject=\"Doctor's Appointment\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Monday\"), DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")]))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Doctor's Appointment\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Monday\"), DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")]))", "python_multiline": "def answer():\n    next_monday = DateTimeClause.get_next_dow(day_of_week=\"Monday\")\n    appointment_time = DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")\n    event = Event(subject=\"Doctor's Appointment\", starts_at=[next_monday, appointment_time])\n    api.add_event(event)", "python_multiline_discarded": "def answer():\n    next_monday = DateTimeClause.get_next_dow(day_of_week=\"Monday\")\n    appointment_time = DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")\n    event = Event(subject=\"Doctor's Appointment\", starts_at=[next_monday, appointment_time])\n    api.add_event(event)", "python_oneline_discarded": "def answer():\n     api.add_event(Event(subject=\"Doctor's Appointment\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Monday\"), DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")]))"}
{"qid": "1d02027c-0dd4-4198-af4d-b35442f43032.2", "query": "i need to have an event on Monday to watch Peter_Bachelor", "python": "def answer():\n    api.add_event(Event(subject=\"Watch Peter_Bachelor\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Monday\")]))"}
{"qid": "c70a7d76-c5a8-4092-80a7-e4771e67567a.3", "query": "Schedule the coffee date for 1 : 00 p.m. with Fred , Lucy and Kie", "python": "def answer():\n    fred = api.find_person(\"Fred\")\n    lucy = api.find_person(\"Lucy\")\n    kie = api.find_person(\"Kie\")\n    api.add_event(Event(subject=\"Coffee Date\", attendees=[fred, lucy, kie], starts_at=[DateTimeClause.time_by_hm(hour=1, am_or_pm=\"pm\")]))"}
{"qid": "ce6725bd-f275-4955-841a-05ee72fdd280.0", "query": "add baby time on friday", "python": "def answer():\n    api.add_event(Event(subject=\"Baby Time\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\")]))"}
{"qid": "edccf7da-ae2d-406d-8492-00d4238aeb6e.4", "query": "Add an appointment to clean out my office for saturday at 1 pm", "python": "def answer():\n    api.add_event(Event(subject=\"Clean out my office\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Saturday\"), DateTimeClause.time_by_hm(hour=1, am_or_pm=\"pm\")]))"}
{"qid": "2fb4bc0a-3a26-4b01-9ca5-499acbb98944.2", "query": "Schedule a seminar on March 19 at 8 : 15 am for an hour", "python": "def answer():\n    api.add_event(Event(subject=\"seminar\", starts_at=[DateTimeClause.date_by_mdy(month=\"MARCH\", day=19), DateTimeClause.time_by_hm(hour=8, minute=15, am_or_pm=\"am\")], duration=Hours(1)))"}
{"qid": "d9b63549-41ac-4c03-abc0-63cbfb2bdb52.1", "query": "Set a meeting with Lisa at 12 : 00 pm 04 / 27 / 2019", "python": "def answer():\n    lisa = api.find_person(\"Lisa\")\n    api.add_event(Event(subject=\"Meeting with Lisa\", attendees=[lisa], starts_at=[DateTimeClause.date_by_mdy(month=4, day=27, year=2019), DateTimeClause.time_by_hm(hour=12, am_or_pm=\"pm\")]))"}
{"qid": "c1fd2c16-8535-46f9-bf3d-eed8fe606422.0", "query": "Add a workout session for Sunday at 8 am for 3 hours", "python": "def answer():\n    api.add_event(Event(subject=\"Workout Session\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")], duration=TimeUnit(3, unit=TimeUnits.Hours)))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Workout Session\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")], duration=TimeUnit(3, unit=TimeUnits.Hours)))", "python_multiline": "def answer():\n    event_subject = \"Workout Session\"\n    event_start_time = DateTimeClause.get_next_dow(day_of_week=\"Sunday\")\n    event_start_hour = DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")\n    event_duration = TimeUnit(3, unit=TimeUnits.Hours)\n    \n    event = Event(subject=event_subject, starts_at=[event_start_time, event_start_hour], duration=event_duration)\n    \n    api.add_event(event)", "python_multiline_discarded": "def answer():\n    event_subject = \"Workout Session\"\n    event_start_time = DateTimeClause.get_next_dow(day_of_week=\"Sunday\")\n    event_start_hour = DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")\n    event_duration = TimeUnit(3, unit=TimeUnits.Hours)\n    \n    event = Event(subject=event_subject, starts_at=[event_start_time, event_start_hour], duration=event_duration)\n    \n    api.add_event(event)", "python_oneline_discarded": "def answer():\n     return api.add_event(Event(subject=\"Workout Session\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")], duration=TimeUnit(3, unit=TimeUnits.Hours)))"}
{"qid": "223edb7f-6804-4a54-b169-298b6ce50f6d.4", "query": "Create a meeting in the afternoon on Monday", "python": "def answer():\n    api.add_event(Event(starts_at=[DateTimeValues.Afternoon, DateTimeClause.get_next_dow(day_of_week=\"Monday\")]))"}
{"qid": "b45da458-ec3b-4f53-b4ba-5a27dbc73b81.3", "query": "Doctors appointment Monday 2 pm", "python": "def answer():\n    api.add_event(Event(subject=\"Doctor's Appointment\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Monday\"), DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")]))"}
{"qid": "2a882c87-0eef-4950-a38c-1c2b1a193bd0.1", "query": "At 11 set an event stop to get something to eat .", "python": "def answer():\n    api.add_event(Event(subject=\"Get something to eat\", starts_at=[DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")]))"}
{"qid": "7d72f1e4-ea31-41e4-b419-08baca8c019a.6", "query": "Add a meeting with Bob and Suzy Tuesday at 1 PM", "python": "def answer():\n    bob = api.find_person(\"Bob\")\n    suzy = api.find_person(\"Suzy\")\n    api.add_event(Event(subject=\"Meeting with Bob and Suzy\", attendees=[bob, suzy], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Tuesday\"), DateTimeClause.time_by_hm(hour=1, am_or_pm=\"pm\")]))"}
{"qid": "4463694e-1677-4b6a-8f8e-786a00019e61.1", "query": "put meeting with robells", "python": "def answer():\n    robells = api.find_person(\"Robells\")\n    api.add_event(Event(subject=\"Meeting with Robells\", attendees=[robells]))"}
{"qid": "32f46000-ea50-40a6-95ff-d81290cf5e86.0", "query": "I 'm going to lift some weights at 10", "python": "def answer():\n    api.add_event(Event(subject=\"Lifting Weights\", starts_at=[DateTimeClause.time_by_hm(hour=10, am_or_pm=\"am\")]))"}
{"qid": "f41519e2-a45f-4599-874a-9414f8e7480a.1", "query": "Set an appointment to check the weather in Florida at 3 .", "python": "def answer():\n    api.add_event(Event(subject=\"Check Weather in Florida\", starts_at=[DateTimeValues.Today, DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")]))"}
{"qid": "7ca735d9-c960-4567-bb9f-4b2ee7bc4733.2", "query": "Schedule Call mom and speak about previous arrangements at 1 pm today .", "python": "def answer():\n    api.add_event(Event(subject=\"Call mom\", starts_at=[DateTimeValues.Today, DateTimeClause.time_by_hm(hour=1, am_or_pm=\"pm\")]))"}
{"qid": "15b0f0e5-023c-4a2d-9f66-4f47c9b95e51.5", "query": "I need to add a doctor appointment for 4 / 16 at 8 am .", "python": "def answer():\n    api.add_event(Event(subject=\"Doctor Appointment\", starts_at=[DateTimeClause.date_by_mdy(month=\"APRIL\", day=16), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")]))"}
{"qid": "1c93cb9b-cbee-4ad9-8e49-5f51bbc8a467.1", "query": "make an event for tomorrow at 3 pm", "python": "def answer():\n    api.add_event(Event(starts_at=[DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")]))", "python_oneline": "def answer():\n    api.add_event(Event(starts_at=[DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")]))", "python_multiline": "def answer():\n    start_time = DateTimeValues.Tomorrow\n    time_clause = DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")\n    event = Event(starts_at=[start_time, time_clause])\n    api.add_event(event)", "python_multiline_discarded": "def answer():\n    start_time = DateTimeValues.Tomorrow\n    time_clause = DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")\n    event = Event(starts_at=[start_time, time_clause])\n    api.add_event(event)", "python_oneline_discarded": "def answer():\n     return api.add_event(Event(starts_at=[DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")]))"}
{"qid": "01afdfef-4308-4d1e-a6a4-537e68f12c78.7", "query": "Ok schedule a time to call Mom and Dad on June 7 .", "python": "def answer():\n    api.add_event(Event(subject=\"Call Mom and Dad\", starts_at=[DateTimeClause.date_by_mdy(month=\"JUNE\", day=7)]))"}
{"qid": "e5373136-266a-4ab8-99f7-8bc2c82ccedb.3", "query": "Add engagement party to monday 9 pm with Abby kim and desi", "python": "def answer():\n    abby = api.find_person(\"Abby\")\n    kim = api.find_person(\"Kim\")\n    desi = api.find_person(\"Desi\")\n    api.add_event(Event(subject=\"Engagement Party\", attendees=[abby, kim, desi], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Monday\"), DateTimeClause.time_by_hm(hour=9, am_or_pm=\"pm\")]))"}
{"qid": "62b5932e-fb45-4840-a464-145a6c287e44.0", "query": "Create event \" Jessica 's Baby Shower \" at 1 pm on December 21", "python": "def answer():\n    api.add_event(Event(subject=\"Jessica's Baby Shower\", starts_at=[DateTimeClause.date_by_mdy(month=12, day=21), DateTimeClause.time_by_hm(hour=1, am_or_pm=\"pm\")]))"}
{"qid": "a27a2eba-1a7f-4927-bcb3-834bc3fd0283.1", "query": "I would also like to schedule a dinner at the 10 : 00 pm tomorrow at the Olive Garden at Time 's Square .", "python": "def answer():\n    api.add_event(Event(subject=\"Dinner at Olive Garden\", location=\"Times Square\", starts_at=[DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=10, am_or_pm=\"pm\")]))"}
{"qid": "a329c265-45b9-4db7-ac59-e66e118872ad.0", "query": "Schedule a family dinner at Shoneys for Sunday at 2 : 00 pm for 1 . 5 hours .", "python": "def answer():\n    api.add_event(Event(subject=\"Family Dinner\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")], duration=TimeUnit(1.5, unit=TimeUnits.Hours), location=\"Shoneys\"))"}
{"qid": "1c3d6991-72b5-40db-88fe-b818fa29e167.2", "query": "ok create a schedule for return my purchase from your store", "python": "def answer():\n    api.add_event(Event(subject=\"Return Purchase\", starts_at=[DateTimeValues.Today]))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Return Purchase\", starts_at=[DateTimeValues.Today]))", "python_multiline": "def answer():\n    event_subject = \"Return Purchase\"\n    start_time = DateTimeValues.Today\n    new_event = Event(subject=event_subject, starts_at=start_time)\n    api.add_event(new_event)", "python_multiline_discarded": "def answer():\n    event_subject = \"Return Purchase\"\n    start_time = DateTimeValues.Today\n    new_event = Event(subject=event_subject, starts_at=start_time)\n    api.add_event(new_event)", "python_oneline_discarded": "def answer():\n     return api.add_event(Event(subject=\"Return Purchase\", starts_at=[DateTimeValues.Today]))"}
{"qid": "64ef9311-9e92-4fda-821d-ad8a75d2c38e.0", "query": "Make an event for A work Meeting this Thursday at 2 pm", "python": "def answer():\n    api.add_event(Event(subject=\"Work Meeting\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")]))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Work Meeting\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")]))", "python_multiline": "def answer():\n    next_thursday = DateTimeClause.get_next_dow(day_of_week=\"Thursday\")\n    time = DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")\n    event = Event(subject=\"Work Meeting\", starts_at=[next_thursday, time])\n    api.add_event(event)", "python_multiline_discarded": "def answer():\n    next_thursday = DateTimeClause.get_next_dow(day_of_week=\"Thursday\")\n    time = DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")\n    event = Event(subject=\"Work Meeting\", starts_at=[next_thursday, time])\n    api.add_event(event)", "python_oneline_discarded": "def answer():\n     return api.add_event(Event(subject=\"Work Meeting\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")]))"}
{"qid": "9bfda2fa-12e9-4984-9158-9873878d648d.0", "query": "can you book a dinner date with jack at 7 pm today ?", "python": "def answer():\n    jack = api.find_person(\"Jack\")\n    api.add_event(Event(subject=\"Dinner Date with Jack\", attendees=[jack], starts_at=[DateTimeValues.Today, DateTimeClause.time_by_hm(hour=7, am_or_pm=\"pm\")]))"}
{"qid": "d81815b8-bb4a-459e-acc5-9b63803ebd4c.1", "query": "Make an appointment in Central Park on Friday .", "python": "def answer():\n    api.add_event(Event(subject=\"Appointment in Central Park\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\")], location=\"Central Park\"))"}
{"qid": "f37c0615-0467-40f1-80fa-b9c4e3caaba5.0", "query": "Can you set a meeting with Mary on Friday at 11 ?", "python": "def answer():\n    api.add_event(Event(attendees=[api.find_person(\"Mary\")], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\"), DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")]))"}
{"qid": "e1165dbe-05f7-4962-8abd-69e0de8c5be4.4", "query": "Set up Visit to the Farm on Sunday at 5 pm .", "python": "def answer():\n    api.add_event(Event(subject=\"Visit to the Farm\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=5, am_or_pm=\"pm\")]))"}
{"qid": "807f408c-854c-4b3d-8725-4cb3d06fe766.0", "query": "Add final exam Tuesday at 11 AM .", "python": "def answer():\n    api.add_event(Event(subject=\"Final Exam\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Tuesday\"), DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")]))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Final Exam\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Tuesday\"), DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")]))", "python_multiline": "def answer():\n    next_tuesday = DateTimeClause.get_next_dow(day_of_week=\"Tuesday\")\n    exam_time = DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")\n    exam_event = Event(subject=\"Final Exam\", starts_at=[next_tuesday, exam_time])\n    api.add_event(exam_event)", "python_multiline_discarded": "def answer():\n    next_tuesday = DateTimeClause.get_next_dow(day_of_week=\"Tuesday\")\n    exam_time = DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")\n    exam_event = Event(subject=\"Final Exam\", starts_at=[next_tuesday, exam_time])\n    api.add_event(exam_event)", "python_oneline_discarded": "def answer():\n     api.add_event(Event(subject=\"Final Exam\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Tuesday\"), DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")]))"}
{"qid": "6596d665-8660-47be-9d53-149d5056c934.0", "query": "Create Kids Outing for July 28 th at 2 pm and set location to Waterworks .", "python": "def answer():\n    api.add_event(Event(subject=\"Kids Outing\", starts_at=[DateTimeClause.date_by_mdy(month=\"JULY\", day=28), DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")], location=\"Waterworks\"))"}
{"qid": "ba6d9af0-bcc1-489f-af9a-e84726a8ce78.3", "query": "Make an event for monday at 4 pm", "python": "def answer():\n    api.add_event(Event(starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Monday\"), DateTimeClause.time_by_hm(hour=4, am_or_pm=\"pm\")]))"}
{"qid": "c36c4757-3619-45c2-a142-59bbec7f868c.5", "query": "Add Jay 's birthday to today", "python": "def answer():\n    jay = api.find_person(\"Jay\")\n    api.add_event(Event(subject=\"Jay's Birthday\", starts_at=[DateTimeValues.Today]))"}
{"qid": "17afbe33-7f02-4f79-8ff0-df0d15167c82.0", "query": "Who is Jareds manager ?", "python": "def answer():\n    return api.find_person(\"Jareds\").find_manager_of()", "python_oneline": "def answer():\n    return api.find_person(\"Jareds\").find_manager_of()", "python_multiline": "def answer():\n    jareds_person = api.find_person(\"Jareds\")\n    jareds_manager = jareds_person.find_manager_of()\n    return jareds_manager", "python_multiline_discarded": "def answer():\n    jareds_person = api.find_person(\"Jareds\")\n    jareds_manager = jareds_person.find_manager_of()\n    return jareds_manager", "python_oneline_discarded": "def answer():\n    return api.find_person(\"Jareds\").find_manager_of()"}
{"qid": "4e2dfa25-c36f-496c-8624-54bd79ef0e46.0", "query": "add yard work for 2 hours", "python": "def answer():\n    api.add_event(Event(subject=\"Yard Work\", duration=TimeUnit(2, unit=TimeUnits.Hours)))"}
{"qid": "49ed358b-26d2-4a8e-a571-9765bef7019b.0", "query": "Make an event for next Saturday called \" Happy fun time for friends . \"", "python": "def answer():\n    api.add_event(Event(subject=\"Happy fun time for friends\", starts_at=[DateTimeValues.NextWeekend]))"}
{"qid": "ed0aebb5-6f81-443e-98d3-d43115208b7a.0", "query": "Please create an event for next monday at 10 am to last through the end of day", "python": "def answer():\n    api.add_event(Event(starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Monday\"), DateTimeClause.time_by_hm(hour=10, am_or_pm=\"am\")], ends_at=[DateTimeValues.EndOfWorkDay]))", "python_oneline": "def answer():\n    api.add_event(Event(starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Monday\"), DateTimeClause.time_by_hm(hour=10, am_or_pm=\"am\")], ends_at=[DateTimeValues.EndOfWorkDay]))", "python_multiline": "def answer():\n    next_monday = DateTimeClause.get_next_dow(day_of_week=\"Monday\")\n    start_time = DateTimeClause.time_by_hm(hour=10, am_or_pm=\"am\")\n    end_time = DateTimeValues.EndOfWorkDay\n    api.add_event(Event(starts_at=[next_monday, start_time], ends_at=[end_time]))", "python_multiline_discarded": "def answer():\n    next_monday = DateTimeClause.get_next_dow(day_of_week=\"Monday\")\n    start_time = DateTimeClause.time_by_hm(hour=10, am_or_pm=\"am\")\n    end_time = DateTimeValues.EndOfWorkDay\n    api.add_event(Event(starts_at=[next_monday, start_time], ends_at=[end_time]))", "python_oneline_discarded": "def answer():\n     api.add_event(Event(starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Monday\"), DateTimeClause.time_by_hm(hour=10, am_or_pm=\"am\")], ends_at=[DateTimeValues.EndOfWorkDay]))"}
{"qid": "580cfa43-d9f9-416c-9f6c-0a97620dfdc4.3", "query": "Schedule a soccer match with Pedro tomorrow afternoon .", "python": "def answer():\n    pedro = api.find_person(\"Pedro\")\n    api.add_event(Event(subject=\"Soccer Match\", attendees=[pedro], starts_at=[DateTimeValues.Tomorrow, DateTimeValues.Afternoon]))"}
{"qid": "ad06ce50-1816-40e9-94fb-e48000860c57.4", "query": "create an event for monday", "python": "def answer():\n    api.add_event(Event(starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Monday\")]))"}
{"qid": "37bddf10-6b73-470e-b85d-7a102c469378.1", "query": "Create a meeting in the afternoon on Monday", "python": "def answer():\n    api.add_event(Event(starts_at=[DateTimeValues.Afternoon, DateTimeClause.get_next_dow(day_of_week=\"Monday\")]))"}
{"qid": "2730cbbf-a74f-4715-9c00-540550375e32.4", "query": "I had a meeting with Bob last tuesday at 9 am about financing a truck", "python": "def answer():\n    bob = api.find_person(\"Bob\")\n    api.add_event(Event(subject=\"Meeting about financing a truck\", attendees=[bob], starts_at=[DateTimeValues.LastWeekNew, DateTimeClause.get_next_dow(day_of_week=\"Tuesday\"), DateTimeClause.time_by_hm(hour=9, am_or_pm=\"am\")]))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Meeting about financing a truck\", attendees=[api.find_person(\"Bob\")], starts_at=[DateTimeValues.LastWeekNew, DateTimeClause.get_next_dow(day_of_week=\"Tuesday\"), DateTimeClause.time_by_hm(hour=9, am_or_pm=\"am\")]))", "python_multiline": "def answer():\n    bob = api.find_person(\"Bob\")\n    api.add_event(Event(subject=\"Meeting about financing a truck\", attendees=[bob], starts_at=[DateTimeValues.LastWeekNew, DateTimeClause.get_next_dow(day_of_week=\"Tuesday\"), DateTimeClause.time_by_hm(hour=9, am_or_pm=\"am\")]))", "python_multiline_discarded": "def answer():\n    bob = api.find_person(\"Bob\")\n    last_tuesday = DateTimeValues.LastWeekNew\n    next_tuesday = DateTimeClause.get_next_dow(day_of_week=\"Tuesday\")\n    time_9am = DateTimeClause.time_by_hm(hour=9, am_or_pm=\"am\")\n    event_subject = \"Meeting about financing a truck\"\n    event_attendees = [bob]\n    event_starts_at = [last_tuesday, next_tuesday, time_9am]\n    api.add_event(Event(subject=event_subject, attendees=event_attendees, starts_at=event_starts_at))", "python_oneline_discarded": "def answer():\n    api.add_event(Event(subject=\"Meeting about financing a truck\", attendees=[api.find_person(\"Bob\")], starts_at=[DateTimeValues.LastWeekNew, DateTimeClause.get_next_dow(day_of_week=\"Tuesday\"), DateTimeClause.time_by_hm(hour=9, am_or_pm=\"am\")]))"}
{"qid": "d11b4ff1-fd85-48c5-a06d-232a431a758a.0", "query": "Schedule a one - hour fundraising prep meeting for Thursday at 10 : 45 am .", "python": "def answer():\n    api.add_event(Event(subject=\"Fundraising Prep Meeting\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeClause.time_by_hm(hour=10, minute=45, am_or_pm=\"am\")], duration=TimeUnit(1, unit=TimeUnits.Hours)))"}
{"qid": "9a59269f-58c4-40f5-8e9a-8f2c0a6912a6.1", "query": "Okay , can you just add , Trip to San Rafael for Saturday at 11 am ?", "python": "def answer():\n    api.add_event(Event(subject=\"Trip to San Rafael\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Saturday\"), DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")]))"}
{"qid": "9ab55ab5-bfdf-4965-862a-9ee4c1f44de2.7", "query": "I need a meeting with Kyle next week .", "python": "def answer():\n    api.add_event(Event(attendees=[api.find_person(\"Kyle\")], starts_at=[DateTimeValues.NextWeekList]))"}
{"qid": "1a752ca1-3c46-4fca-a35e-9cd588c3aad2.0", "query": "Create a meeting at 6 pm", "python": "def answer():\n    api.add_event(Event(starts_at=[DateTimeClause.time_by_hm(hour=6, am_or_pm=\"pm\")]))"}
{"qid": "1062d486-9e34-4fc8-ac17-695886cb04db.0", "query": "Add Flight from Calgary Airport Sunday at 8 am .", "python": "def answer():\n    api.add_event(Event(subject=\"Flight from Calgary Airport\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")]))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Flight from Calgary Airport\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")]))", "python_multiline": "def answer():\n    next_sunday = DateTimeClause.get_next_dow(day_of_week=\"Sunday\")\n    flight_time = DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")\n    event = Event(subject=\"Flight from Calgary Airport\", starts_at=[next_sunday, flight_time])\n    api.add_event(event)", "python_multiline_discarded": "def answer():\n    next_sunday = DateTimeClause.get_next_dow(day_of_week=\"Sunday\")\n    flight_time = DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")\n    event = Event(subject=\"Flight from Calgary Airport\", starts_at=[next_sunday, flight_time])\n    api.add_event(event)", "python_oneline_discarded": "def answer():\n     api.add_event(Event(subject=\"Flight from Calgary Airport\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")]))"}
{"qid": "b802ef88-6d3b-42c5-8f65-0cc6d51310e6.0", "query": "can you please schedule a meeting with Jane at 10 am on Friday", "python": "def answer():\n    jane = api.find_person(\"Jane\")\n    api.add_event(Event(subject=\"Meeting with Jane\", attendees=[jane], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\"), DateTimeClause.time_by_hm(hour=10, am_or_pm=\"am\")]))"}
{"qid": "02724824-6375-4b12-b761-b82be85bd3d5.0", "query": "Put exercise on the schedule for tomorrow morning .", "python": "def answer():\n    api.add_event(Event(subject=\"Exercise\", starts_at=[DateTimeValues.Tomorrow, DateTimeValues.Morning]))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Exercise\", starts_at=[DateTimeValues.Tomorrow, DateTimeValues.Morning]))", "python_multiline": "def answer():\n    event = Event(subject=\"Exercise\", starts_at=[DateTimeValues.Tomorrow, DateTimeValues.Morning])\n    api.add_event(event)", "python_multiline_discarded": "def answer():\n    event = Event(subject=\"Exercise\", starts_at=[DateTimeValues.Tomorrow, DateTimeValues.Morning])\n    api.add_event(event)", "python_oneline_discarded": "def answer():\n     api.add_event(Event(subject=\"Exercise\", starts_at=[DateTimeValues.Tomorrow, DateTimeValues.Morning]))"}
{"qid": "1fee6215-550b-4ce3-a355-1b5d46b2a6e4.0", "query": "put meeting with kiran and meeria", "python": "def answer():\n    attendees = [api.find_person(\"Kiran\"), api.find_person(\"Meeria\")]\n    api.add_event(Event(attendees=attendees))"}
{"qid": "b5bf4e67-534c-4571-b85b-6ebba371745c.0", "query": "Create a lunch with Cher", "python": "def answer():\n    cher = api.find_person(\"Cher\")\n    api.add_event(Event(subject=\"Lunch with Cher\", attendees=[cher]))"}
{"qid": "a8176062-7726-40c5-98e7-385e38a7da07.5", "query": "Add to schedule icecream on Friday at 5 : 00 pm .", "python": "def answer():\n    api.add_event(Event(subject=\"Icecream\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\"), DateTimeClause.time_by_hm(hour=5, am_or_pm=\"pm\")]))"}
{"qid": "678f4940-2a97-4265-b13e-ee78cf4d049d.3", "query": "I need to set up a meeting with Kim on Friday for my promotion .", "python": "def answer():\n    kim = api.find_person(\"Kim\")\n    api.add_event(Event(subject=\"Promotion Meeting\", attendees=[kim], starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\")]))"}
{"qid": "ee36cbcc-c4fe-4aa5-af52-2a126d5fd692.3", "query": "Schedule a lunch meeting on Friday at 2 pm .", "python": "def answer():\n    api.add_event(Event(subject=\"Lunch Meeting\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Friday\"), DateTimeClause.time_by_hm(hour=2, am_or_pm=\"pm\")]))"}
{"qid": "2d55efd5-9f62-42de-b21c-1e2fd2acd970.2", "query": "Okay great , can you add take Seymour to the Dog Park on Sunday from 11 am to 12 : 30 pm", "python": "def answer():\n    seymour = api.find_person(\"Seymour\")\n    api.add_event(Event(subject=\"Take Seymour to the Dog Park\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\"), DateTimeClause.time_by_hm(hour=11, am_or_pm=\"am\")], ends_at=[DateTimeClause.time_by_hm(hour=12, minute=30, am_or_pm=\"pm\")]))"}
{"qid": "d3a3723f-54f7-4774-bfdd-78c2e8f0a45d.0", "query": "Can you add an event to my calendar called doctor for tomorrow ?", "python": "def answer():\n    api.add_event(Event(subject=\"Doctor\", starts_at=[DateTimeValues.Tomorrow]))"}
{"qid": "d2c10c1c-1910-4dd6-9ef4-6df579a69b40.1", "query": "Can you add a doctor appointment", "python": "def answer():\n    api.add_event(Event(subject=\"Doctor Appointment\"))"}
{"qid": "593f17d2-01eb-4362-ab11-0c7440289f9d.4", "query": "Nice , and book me a room at Berkeley", "python": "def answer():\n    api.add_event(Event(location=\"Berkeley\"))"}
{"qid": "a5fe7256-595e-4c7f-b4b0-736d0c43d908.0", "query": "Put lunch with Paige in my calendar", "python": "def answer():\n    paige = api.find_person(\"Paige\")\n    api.add_event(Event(subject=\"Lunch with Paige\", attendees=[paige]))", "python_oneline": "def answer():\n     api.add_event(Event(subject=\"Lunch with Paige\", attendees=[api.find_person(\"Paige\")]))", "python_multiline": "def answer():\n    paige = api.find_person(\"Paige\")\n    api.add_event(Event(subject=\"Lunch with Paige\", attendees=[paige]))", "python_multiline_discarded": "def answer():\n    paige = api.find_person(\"Paige\")\n    lunch_event = Event(subject=\"Lunch with Paige\", attendees=[paige])\n    api.add_event(lunch_event)", "python_oneline_discarded": "def answer():\n     api.add_event(Event(subject=\"Lunch with Paige\", attendees=[api.find_person(\"Paige\")]))"}
{"qid": "c5b7bff1-d530-42f3-a190-0be6715e7902.0", "query": "Put my orthopedist appointment on the calendar for Thursday at 1 : 40 .", "python": "def answer():\n    api.add_event(Event(subject=\"Orthopedist Appointment\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Thursday\"), DateTimeClause.time_by_hm(hour=1, minute=40, am_or_pm=\"pm\")]))"}
{"qid": "de183c73-0766-47da-bfc5-77aea0a8aafc.2", "query": "Set an even for Tuesday", "python": "def answer():\n    api.add_event(Event(starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Tuesday\")]))"}
{"qid": "4ee1ab18-0bf8-43bb-ac50-baf6e0d0af70.3", "query": "I have a Magic tournament on Saturday from 8 : 00 AM until 3 : 00 PM .", "python": "def answer():\n    api.add_event(Event(subject=\"Magic Tournament\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Saturday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")], ends_at=[DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")]))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Magic Tournament\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Saturday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")], ends_at=[DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")]))", "python_multiline": "def answer():\n    start_time = DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")\n    end_time = DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")\n    next_saturday = DateTimeClause.get_next_dow(day_of_week=\"Saturday\")\n    event = Event(subject=\"Magic Tournament\", starts_at=[next_saturday, start_time], ends_at=[end_time])\n    api.add_event(event)", "python_multiline_discarded": "def answer():\n    start_time = DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")\n    end_time = DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")\n    next_saturday = DateTimeClause.get_next_dow(day_of_week=\"Saturday\")\n    event = Event(subject=\"Magic Tournament\", starts_at=[next_saturday, start_time], ends_at=[end_time])\n    api.add_event(event)", "python_oneline_discarded": "def answer():\n     return api.add_event(Event(subject=\"Magic Tournament\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Saturday\"), DateTimeClause.time_by_hm(hour=8, am_or_pm=\"am\")], ends_at=[DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")]))"}
{"qid": "f76b84af-08de-4175-8403-5d246b7613e8.3", "query": "set the dinner with Hannah at 3 pm", "python": "def answer():\n    hannah = api.find_person(\"Hannah\")\n    api.add_event(Event(subject=\"Dinner with Hannah\", attendees=[hannah], starts_at=[DateTimeClause.time_by_hm(hour=3, am_or_pm=\"pm\")]))"}
{"qid": "fb3b21dc-bfad-4b9a-b346-2c85128ed06d.2", "query": "schedule lunch with Jonny in seattle aug 15 around 1 pm", "python": "def answer():\n    jonny = api.find_person(\"Jonny\")\n    api.add_event(Event(subject=\"Lunch with Jonny\", attendees=[jonny], location=\"Seattle\", starts_at=[DateTimeClause.date_by_mdy(month=\"AUGUST\", day=15), DateTimeClause.time_by_hm(hour=1, am_or_pm=\"pm\")], show_as_status=ShowAsStatusType.Busy))"}
{"qid": "9b1645f0-7ce5-4d33-8511-8ff9f5b3feca.0", "query": "I need to add my haircut tomorrow at 10 am for 2 hours at Studio 121", "python": "def answer():\n    api.add_event(Event(subject=\"Haircut\", starts_at=[DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=10, am_or_pm=\"am\")], duration=TimeUnit(2, unit=TimeUnits.Hours), location=\"Studio 121\"))"}
{"qid": "9b13bf9f-695c-4b83-bf9e-c366ea17c56c.0", "query": "I 'm going to Whimbley Stadium on the 5 th .", "python": "def answer():\n    api.add_event(Event(subject=\"Whimbley Stadium\", starts_at=[nextDayOfMonth(DateTimeValues.Today, day_of_month=5)]))"}
{"qid": "633e5842-30ab-483a-8889-531a2b10ca46.0", "query": "I have a vet appointment on saturday . Can you put that on the calendar for me ?", "python": "def answer():\n    api.add_event(Event(subject=\"Vet Appointment\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Saturday\")]))"}
{"qid": "aa28780b-fe85-4f9c-bc4b-b6ec1e7b9b3d.0", "query": "Let 's make a schedule for 4 today .", "python": "def answer():\n    api.add_event(Event(subject=\"Schedule\", starts_at=[DateTimeValues.Today, DateTimeClause.time_by_hm(hour=4, am_or_pm=\"pm\")]))"}
{"qid": "f230ef0c-d954-4cfe-83a4-495e224cac2c.2", "query": "Book a 3 hour flight to Seattle with Max , Daniel , and Jacob .", "python": "def answer():\n    attendees = [api.find_person(\"Max\"), api.find_person(\"Daniel\"), api.find_person(\"Jacob\")]\n    api.add_event(Event(subject=\"Flight to Seattle\", attendees=attendees, duration=Hours(3), location=\"Seattle\"))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Flight to Seattle\", attendees=[api.find_person(\"Max\"), api.find_person(\"Daniel\"), api.find_person(\"Jacob\")], duration=Hours(3), location=\"Seattle\"))", "python_multiline": "def answer():\n    attendees = [api.find_person(\"Max\"), api.find_person(\"Daniel\"), api.find_person(\"Jacob\")]\n    api.add_event(Event(subject=\"Flight to Seattle\", attendees=attendees, duration=Hours(3), location=\"Seattle\"))", "python_multiline_discarded": "def answer():\n    max_person = api.find_person(\"Max\")\n    daniel_person = api.find_person(\"Daniel\")\n    jacob_person = api.find_person(\"Jacob\")\n    attendees = [max_person, daniel_person, jacob_person]\n    flight_event = Event(subject=\"Flight to Seattle\", attendees=attendees, duration=Hours(3), location=\"Seattle\")\n    api.add_event(flight_event)", "python_oneline_discarded": "def answer():\n    api.add_event(Event(subject=\"Flight to Seattle\", attendees=[api.find_person(\"Max\"), api.find_person(\"Daniel\"), api.find_person(\"Jacob\")], duration=Hours(3), location=\"Seattle\"))"}
{"qid": "764753cb-30a6-4500-8c76-243d9a36f275.0", "query": "I need a meeting with Abby tomorrow at 8 : 30 pm .", "python": "def answer():\n    abby = api.find_person(\"Abby\")\n    api.add_event(Event(subject=\"Meeting with Abby\", attendees=[abby], starts_at=[DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=8, minute=30, am_or_pm=\"pm\")]))", "python_oneline": "def answer():\n     api.add_event(Event(subject=\"Meeting with Abby\", attendees=[api.find_person(\"Abby\")], starts_at=[DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=8, minute=30, am_or_pm=\"pm\")]))", "python_multiline": "def answer():\n    abby = api.find_person(\"Abby\")\n    api.add_event(Event(subject=\"Meeting with Abby\", attendees=[abby], starts_at=[DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=8, minute=30, am_or_pm=\"pm\")]))", "python_multiline_discarded": "def answer():\n    abby = api.find_person(\"Abby\")\n    event_subject = \"Meeting with Abby\"\n    attendees = [abby]\n    start_time = [DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=8, minute=30, am_or_pm=\"pm\")]\n    event = Event(subject=event_subject, attendees=attendees, starts_at=start_time)\n    api.add_event(event)", "python_oneline_discarded": "def answer():\n     api.add_event(Event(subject=\"Meeting with Abby\", attendees=[api.find_person(\"Abby\")], starts_at=[DateTimeValues.Tomorrow, DateTimeClause.time_by_hm(hour=8, minute=30, am_or_pm=\"pm\")]))"}
{"qid": "9093706d-02bd-4648-9287-2e825977c42b.1", "query": "schedule Get New Grubbs next sunday", "python": "def answer():\n    api.add_event(Event(subject=\"Get New Grubbs\", starts_at=[DateTimeClause.get_next_dow(day_of_week=\"Sunday\")]))"}
{"qid": "3a72dc0c-1f64-432a-b8b1-9545f0edb05f.0", "query": "I need to study for test at 8 pm", "python": "def answer():\n    api.add_event(Event(subject=\"Study for Test\", starts_at=[DateTimeClause.time_by_hm(hour=8, am_or_pm=\"pm\")]))", "python_oneline": "def answer():\n    api.add_event(Event(subject=\"Study for Test\", starts_at=[DateTimeClause.time_by_hm(hour=8, am_or_pm=\"pm\")]))", "python_multiline": "def answer():\n    study_event = Event(subject=\"Study for Test\")\n    start_time = DateTimeClause.time_by_hm(hour=8, am_or_pm=\"pm\")\n    study_event.starts_at = [start_time]\n    api.add_event(study_event)", "python_multiline_discarded": "def answer():\n    study_event = Event(subject=\"Study for Test\")\n    start_time = DateTimeClause.time_by_hm(hour=8, am_or_pm=\"pm\")\n    study_event.starts_at = [start_time]\n    api.add_event(study_event)", "python_oneline_discarded": "def answer():\n     api.add_event(Event(subject=\"Study for Test\", starts_at=[DateTimeClause.time_by_hm(hour=8, am_or_pm=\"pm\")]))"}
