
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN_NAME ASSIGN_NODE ASSIGN_NODE_NUMBER CLOSE_ARGUMENTS DECLARE_ASSIGN_NAME IDENTIFIER ITEM_SEPARATOR NAME_VALUE_SEPARATOR OPEN_ARGUMENTS QUOTED_STRING SPECIAL_FEATURE TAG_CHARprogram : valueprogram : program valueparameters : parameterparameters : parameters ITEM_SEPARATOR parameterparameter :parameter : tag_parameter\n                     | simple_parametersimple_parameter : valuesimple_parameter : name NAME_VALUE_SEPARATOR valuetag_parameter : TAG_CHAR simple_parametername : IDENTIFIERvalue : ASSIGN_NAMEvalue : ASSIGN_NODE_NUMBERvalue : DECLARE_ASSIGN_NAME valuevalue : SPECIAL_FEATURE valuevalue : expressionexpression : IDENTIFIER OPEN_ARGUMENTS parameters CLOSE_ARGUMENTSvalue : IDENTIFIERvalue : QUOTED_STRING'
    
_lr_action_items = {'ASSIGN_NAME':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,25,],[3,3,-1,-12,-13,3,3,-16,-18,-19,-2,-14,-15,3,3,-17,3,3,]),'ASSIGN_NODE_NUMBER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,25,],[4,4,-1,-12,-13,4,4,-16,-18,-19,-2,-14,-15,4,4,-17,4,4,]),'DECLARE_ASSIGN_NAME':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,25,],[5,5,-1,-12,-13,5,5,-16,-18,-19,-2,-14,-15,5,5,-17,5,5,]),'SPECIAL_FEATURE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,25,],[6,6,-1,-12,-13,6,6,-16,-18,-19,-2,-14,-15,6,6,-17,6,6,]),'IDENTIFIER':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,25,],[8,8,-1,-12,-13,8,8,-16,-18,-19,-2,-14,-15,14,14,-17,14,8,]),'QUOTED_STRING':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,19,22,23,25,],[9,9,-1,-12,-13,9,9,-16,-18,-19,-2,-14,-15,9,9,-17,9,9,]),'$end':([1,2,3,4,7,8,9,10,11,12,22,],[0,-1,-12,-13,-16,-18,-19,-2,-14,-15,-17,]),'CLOSE_ARGUMENTS':([3,4,7,8,9,11,12,13,14,15,16,17,18,20,22,23,24,26,27,],[-12,-13,-16,-18,-19,-14,-15,-5,-18,22,-3,-6,-7,-8,-17,-5,-10,-4,-9,]),'ITEM_SEPARATOR':([3,4,7,8,9,11,12,13,14,15,16,17,18,20,22,23,24,26,27,],[-12,-13,-16,-18,-19,-14,-15,-5,-18,23,-3,-6,-7,-8,-17,-5,-10,-4,-9,]),'OPEN_ARGUMENTS':([8,14,],[13,13,]),'TAG_CHAR':([13,23,],[19,19,]),'NAME_VALUE_SEPARATOR':([14,21,],[-11,25,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'value':([0,1,5,6,13,19,23,25,],[2,10,11,12,20,20,20,27,]),'expression':([0,1,5,6,13,19,23,25,],[7,7,7,7,7,7,7,7,]),'parameters':([13,],[15,]),'parameter':([13,23,],[16,26,]),'tag_parameter':([13,23,],[17,17,]),'simple_parameter':([13,19,23,],[18,24,18,]),'name':([13,19,23,],[21,21,21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> value','program',1,'p_program_single','pexp_parser.py',358),
  ('program -> program value','program',2,'p_program_multiple','pexp_parser.py',362),
  ('parameters -> parameter','parameters',1,'p_parameters_single','pexp_parser.py',366),
  ('parameters -> parameters ITEM_SEPARATOR parameter','parameters',3,'p_parameters_many','pexp_parser.py',372),
  ('parameter -> <empty>','parameter',0,'p_parameter_empty','pexp_parser.py',377),
  ('parameter -> tag_parameter','parameter',1,'p_parameter_simple','pexp_parser.py',381),
  ('parameter -> simple_parameter','parameter',1,'p_parameter_simple','pexp_parser.py',382),
  ('simple_parameter -> value','simple_parameter',1,'p_parameter_value','pexp_parser.py',386),
  ('simple_parameter -> name NAME_VALUE_SEPARATOR value','simple_parameter',3,'p_parameter_name_value','pexp_parser.py',390),
  ('tag_parameter -> TAG_CHAR simple_parameter','tag_parameter',2,'p_tag_parameter','pexp_parser.py',394),
  ('name -> IDENTIFIER','name',1,'p_name','pexp_parser.py',401),
  ('value -> ASSIGN_NAME','value',1,'p_value_by_name_reference','pexp_parser.py',405),
  ('value -> ASSIGN_NODE_NUMBER','value',1,'p_value_by_number_reference','pexp_parser.py',409),
  ('value -> DECLARE_ASSIGN_NAME value','value',2,'p_value_with_name','pexp_parser.py',413),
  ('value -> SPECIAL_FEATURE value','value',2,'p_value_with_feature','pexp_parser.py',419),
  ('value -> expression','value',1,'p_value_non_terminal','pexp_parser.py',425),
  ('expression -> IDENTIFIER OPEN_ARGUMENTS parameters CLOSE_ARGUMENTS','expression',4,'p_expression','pexp_parser.py',429),
  ('value -> IDENTIFIER','value',1,'p_value_terminal_identifier','pexp_parser.py',434),
  ('value -> QUOTED_STRING','value',1,'p_value_terminal_quote','pexp_parser.py',438),
]
